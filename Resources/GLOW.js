  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>GLOW/build/GLOW.js at master · empaempa/GLOW</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon-precomposed" sizes="57x57" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="apple-touch-icon-144.png" />
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="apple-touch-icon-144.png" />

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="c7xhj/TtwAk1GUZeJxo6qL/EdUYgsDh6YPoLZ0MH4D0=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-10bc127f64235fbda0c8edc55e3f6fc33e99020a.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-f058dd0a2470c893977124d69336e4789671f5db.css" media="screen" rel="stylesheet" type="text/css" />
    


    <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-974473a941a983b46f11833dc8ffba8414698ff7.js" type="text/javascript"></script>
    <script src="https://a248.e.akamai.net/assets.github.com/assets/github-afb681dd53a4786096bde2b11d7553ce67e29b27.js" type="text/javascript"></script>
    

      <link rel='permalink' href='/empaempa/GLOW/blob/abe60599e4df08f0151e741e31f4b181cb1db3b5/build/GLOW.js'>
    <meta property="og:title" content="GLOW"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/empaempa/GLOW"/>
    <meta property="og:image" content="https://a248.e.akamai.net/assets.github.com/images/gravatars/gravatar-user-420.png?1345673561"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="GLOW is a WebGL wrapper, which focuses on easy creation and use of shaders."/>

    <meta name="description" content="GLOW is a WebGL wrapper, which focuses on easy creation and use of shaders." />
  <link href="https://github.com/empaempa/GLOW/commits/master.atom" rel="alternate" title="Recent Commits to GLOW:master" type="application/atom+xml" />

  </head>


  <body class="logged_in page-blob linux vis-public env-production ">
    <div id="wrapper">

    
    

    

      <div id="header" class="true clearfix">
        <div class="container clearfix">
          <a class="site-logo " href="https://github.com/">
            <img alt="GitHub" class="github-logo-4x" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x.png?1340659511" />
            <img alt="GitHub" class="github-logo-4x-hover" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x-hover.png?1340659511" />
          </a>

            <a href="/notifications" class="notification-indicator tooltipped downwards" title="You have unread notifications">
              <span class="mail-status unread"></span>
            </a>

              
    <div class="topsearch command-bar-activated">
      <form accept-charset="UTF-8" action="/search" class="command_bar_form" id="top_search_form" method="get">
  <a href="/search" class="advanced-search tooltipped downwards command-bar-search" id="advanced_search" title="Advanced Search"><span class="mini-icon mini-icon-advanced-search "></span></a>
  <input type="text" name="q" id="command-bar" placeholder="Search or Type a Command" tabindex="1" />
  <span class="mini-icon help tooltipped downwards" title="Show Command Bar Help"></span>
  <input type="hidden" name="type" value="Everything" />
  <input type="hidden" name="repo" value="" />
  <input type="hidden" name="langOverride" value="" />
  <input type="hidden" name="start_value" value="1" />
</form>

      <ul class="top-nav">
          <li class="explore"><a href="https://github.com/explore">Explore</a></li>
          <li><a href="https://gist.github.com">Gist</a></li>
          <li><a href="/blog">Blog</a></li>
        <li><a href="http://help.github.com">Help</a></li>
      </ul>
    </div>


            

  
  <div id="userbox">
    <div id="user">
      <a href="https://github.com/mikolalysenko"><img height="20" src="https://secure.gravatar.com/avatar/3ca049389a932a8c3fa70db5fb86b878?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
      <a href="https://github.com/mikolalysenko" class="name">mikolalysenko</a>
    </div>
    <ul id="user-links">
      <li>
        <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a New Repo"><span class="mini-icon mini-icon-create"></span></a>
      </li>
      <li>
        <a href="/settings/profile" id="account_settings"
          class="tooltipped downwards"
          title="Account Settings ">
          <span class="mini-icon mini-icon-account-settings"></span>
        </a>
      </li>
      <li>
          <a href="/logout" data-method="post" id="logout" class="tooltipped downwards" title="Sign Out">
            <span class="mini-icon mini-icon-logout"></span>
          </a>
      </li>
    </ul>
  </div>



          
        </div>
      </div>

      

      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu">
          <div class="container">
            <div class="title-actions-bar">
              


                  <ul class="pagehead-actions">

          <li class="subscription">
              <form accept-charset="UTF-8" action="/notifications/subscribe" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="c7xhj/TtwAk1GUZeJxo6qL/EdUYgsDh6YPoLZ0MH4D0=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="1787327" />
  <div class="context-menu-container js-menu-container js-context-menu">
    <span class="minibutton switcher bigger js-menu-target">
      <span class="js-context-button">
          <span class="mini-icon mini-icon-watching"></span>Watch
      </span>
    </span>

    <div class="context-pane js-menu-content">
      <a href="javascript:;" class="close js-menu-close"><span class="mini-icon mini-icon-remove-close"></span></a>
      <div class="context-title">Notification status</div>

      <div class="context-body pane-selector">
        <ul class="js-navigation-container">
          <li class="selector-item js-navigation-item js-navigation-target selected">
            <span class="mini-icon mini-icon-confirm"></span>
            <label>
              <input checked="checked" id="do_included" name="do" type="radio" value="included" />
              <h4>Not watching</h4>
              <p>You will only receive notifications when you participate or are mentioned.</p>
            </label>
            <span class="context-button-text js-context-button-text">
              <span class="mini-icon mini-icon-watching"></span>
              Watch
            </span>
          </li>
          <li class="selector-item js-navigation-item js-navigation-target ">
            <span class="mini-icon mini-icon-confirm"></span>
            <label>
              <input id="do_subscribed" name="do" type="radio" value="subscribed" />
              <h4>Watching</h4>
              <p>You will receive all notifications for this repository.</p>
            </label>
            <span class="context-button-text js-context-button-text">
              <span class="mini-icon mini-icon-unwatch"></span>
              Unwatch
            </span>
          </li>
          <li class="selector-item js-navigation-item js-navigation-target ">
            <span class="mini-icon mini-icon-confirm"></span>
            <label>
              <input id="do_ignore" name="do" type="radio" value="ignore" />
              <h4>Ignored</h4>
              <p>You will not receive notifications for this repository.</p>
            </label>
            <span class="context-button-text js-context-button-text">
              <span class="mini-icon mini-icon-mute"></span>
              Stop ignoring
            </span>
          </li>
        </ul>
      </div>
    </div>
  </div>
</form>
          </li>

          <li class="js-toggler-container js-social-container starring-container on">
            <a href="/empaempa/GLOW/unstar" class="minibutton js-toggler-target starred" data-remote="true" data-method="post" rel="nofollow">
              <span class="mini-icon mini-icon-star"></span>Unstar
            </a><a href="/empaempa/GLOW/star" class="minibutton js-toggler-target unstarred" data-remote="true" data-method="post" rel="nofollow">
              <span class="mini-icon mini-icon-star"></span>Star
            </a><a class="social-count js-social-count" href="/empaempa/GLOW/stargazers">115</a>
          </li>

              <li><a href="/empaempa/GLOW/fork" class="minibutton js-toggler-target fork-button lighter" rel="nofollow" data-method="post"><span class="mini-icon mini-icon-fork"></span>Fork</a><a href="/empaempa/GLOW/network" class="social-count">16</a>
              </li>


    </ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-icon mega-icon-public-repo"></span>
                <span class="author vcard">
                  <a href="/empaempa" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">empaempa</span>
                  </a></span> /
                <strong><a href="/empaempa/GLOW" class="js-current-repository">GLOW</a></strong>
              </h1>
            </div>

            

  <ul class="tabs">
    <li><a href="/empaempa/GLOW" class="selected" highlight="repo_sourcerepo_downloadsrepo_commitsrepo_tagsrepo_branches">Code</a></li>
    <li><a href="/empaempa/GLOW/network" highlight="repo_network">Network</a></li>
    <li><a href="/empaempa/GLOW/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>0</span></a></li>

      <li><a href="/empaempa/GLOW/issues" highlight="repo_issues">Issues <span class='counter'>6</span></a></li>



    <li><a href="/empaempa/GLOW/graphs" highlight="repo_graphsrepo_contributors">Graphs</a></li>


  </ul>
  
<div class="frame frame-center tree-finder" style="display:none"
      data-tree-list-url="/empaempa/GLOW/tree-list/abe60599e4df08f0151e741e31f4b181cb1db3b5"
      data-blob-url-prefix="/empaempa/GLOW/blob/abe60599e4df08f0151e741e31f4b181cb1db3b5"
    >

  <div class="breadcrumb">
    <span class="bold"><a href="/empaempa/GLOW">GLOW</a></span> /
    <input class="tree-finder-input js-navigation-enable" type="text" name="query" autocomplete="off" spellcheck="false">
  </div>

    <div class="octotip">
      <p>
        <a href="/empaempa/GLOW/dismiss-tree-finder-help" class="dismiss js-dismiss-tree-list-help" title="Hide this notice forever" rel="nofollow">Dismiss</a>
        <span class="bold">Octotip:</span> You've activated the <em>file finder</em>
        by pressing <span class="kbd">t</span> Start typing to filter the
        file list. Use <span class="kbd badmono">↑</span> and
        <span class="kbd badmono">↓</span> to navigate,
        <span class="kbd">enter</span> to view files.
      </p>
    </div>

  <table class="tree-browser css-truncate" cellpadding="0" cellspacing="0">
    <tr class="js-header"><th>&nbsp;</th><th>name</th></tr>
    <tr class="js-no-results no-results" style="display: none">
      <th colspan="2">No matching files</th>
    </tr>
    <tbody class="js-results-list js-navigation-container">
    </tbody>
  </table>
</div>

<div id="jump-to-line" style="display:none">
  <h2>Jump to Line</h2>
  <form accept-charset="UTF-8">
    <input class="textfield" type="text">
    <div class="full-button">
      <button type="submit" class="classy">
        Go
      </button>
    </div>
  </form>
</div>


<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
      <li><a href="/empaempa/GLOW/tags" class="tabnav-tab" highlight="repo_tags">Tags <span class="counter blank">0</span></a></li>
      <li><a href="/empaempa/GLOW/downloads" class="tabnav-tab" highlight="repo_downloads">Downloads <span class="counter blank">0</span></a></li>
    </ul>
    
  </span>

  <div class="tabnav-widget scope">

    <div class="context-menu-container js-menu-container js-context-menu">
      <a href="#"
         class="minibutton bigger switcher js-menu-target js-commitish-button btn-branch repo-tree"
         data-hotkey="w"
         data-master-branch="master"
         data-ref="master">
         <span><em class="mini-icon mini-icon-branch"></em><i>branch:</i> master</span>
      </a>

      <div class="context-pane commitish-context js-menu-content">
        <a href="javascript:;" class="close js-menu-close"><span class="mini-icon mini-icon-remove-close"></span></a>
        <div class="context-title">Switch branches/tags</div>
        <div class="context-body pane-selector commitish-selector js-navigation-container">
          <div class="filterbar">
            <input type="text" id="context-commitish-filter-field" class="js-navigation-enable" placeholder="Filter branches/tags" data-filterable />
            <ul class="tabs">
              <li><a href="#" data-filter="branches" class="selected">Branches</a></li>
              <li><a href="#" data-filter="tags">Tags</a></li>
            </ul>
          </div>

          <div class="js-filter-tab js-filter-branches" data-filterable-for="context-commitish-filter-field" data-filterable-type=substring>
            <div class="no-results js-not-filterable">Nothing to show</div>
              <div class="commitish-item branch-commitish selector-item js-navigation-item js-navigation-target ">
                <span class="mini-icon mini-icon-confirm"></span>
                <h4>
                    <a href="/empaempa/GLOW/blob/gh-pages/build/GLOW.js" class="js-navigation-open" data-name="gh-pages" rel="nofollow">gh-pages</a>
                </h4>
              </div>
              <div class="commitish-item branch-commitish selector-item js-navigation-item js-navigation-target selected">
                <span class="mini-icon mini-icon-confirm"></span>
                <h4>
                    <a href="/empaempa/GLOW/blob/master/build/GLOW.js" class="js-navigation-open" data-name="master" rel="nofollow">master</a>
                </h4>
              </div>
          </div>

          <div class="js-filter-tab js-filter-tags filter-tab-empty" style="display:none" data-filterable-for="context-commitish-filter-field" data-filterable-type=substring>
            <div class="no-results js-not-filterable">Nothing to show</div>
          </div>
        </div>
      </div><!-- /.commitish-context-context -->
    </div>
  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/empaempa/GLOW" class="selected tabnav-tab" highlight="repo_source">Files</a></li>
    <li><a href="/empaempa/GLOW/commits/master" class="tabnav-tab" highlight="repo_commits">Commits</a></li>
    <li><a href="/empaempa/GLOW/branches" class="tabnav-tab" highlight="repo_branches" rel="nofollow">Branches <span class="counter ">2</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:31b0c25120086d9ab66a92992827e39d -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:31b0c25120086d9ab66a92992827e39d -->

<!-- block_view_fragment_key: views10/v8/blob:v21:c9da6966f3b960d4f4d07e2fcf60e1ad -->

  <div id="slider">

    <div class="breadcrumb" data-path="build/GLOW.js/">
      <b itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/empaempa/GLOW/tree/abe60599e4df08f0151e741e31f4b181cb1db3b5" class="js-rewrite-sha" itemprop="url"><span itemprop="title">GLOW</span></a></b> / <span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/empaempa/GLOW/tree/abe60599e4df08f0151e741e31f4b181cb1db3b5/build" class="js-rewrite-sha" itemscope="url"><span itemprop="title">build</span></a></span> / <strong class="final-path">GLOW.js</strong> <span class="js-clippy mini-icon mini-icon-clippy " data-clipboard-text="build/GLOW.js" data-copied-hint="copied!" data-copy-hint="copy to clipboard"></span>
    </div>

      
  <div class="commit file-history-tease js-blob-contributors-content" data-path="build/GLOW.js/">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/aecc642f996c6be3b112c8dd96c0fe7d?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><a href="/subblue">subblue</a></span>
    <time class="js-relative-date" datetime="2012-08-30T03:24:19-07:00" title="2012-08-30 03:24:19">August 30, 2012</time>
    <div class="commit-title">
        <a href="/empaempa/GLOW/commit/97d84bb8cb3db03406d931c66772a87e32c792bd" class="message">Rebuilt JS files</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>4</strong> contributors</a></p>
          <a class="avatar tooltipped downwards" title="empaempa" href="/empaempa/GLOW/commits/master/build/GLOW.js?author=empaempa"><img height="20" src="https://secure.gravatar.com/avatar/25f5d2468cd2ca8712249b6f89b12bac?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
    <a class="avatar tooltipped downwards" title="subblue" href="/empaempa/GLOW/commits/master/build/GLOW.js?author=subblue"><img height="20" src="https://secure.gravatar.com/avatar/aecc642f996c6be3b112c8dd96c0fe7d?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
    <a class="avatar tooltipped downwards" title="olov" href="/empaempa/GLOW/commits/master/build/GLOW.js?author=olov"><img height="20" src="https://secure.gravatar.com/avatar/a847d749f65088c41658483df5c550d9?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
    <a class="avatar tooltipped downwards" title="fserb" href="/empaempa/GLOW/commits/master/build/GLOW.js?author=fserb"><img height="20" src="https://secure.gravatar.com/avatar/ca76ffb0048a2a324251e8bd2b510cee?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>


    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2>Users on GitHub who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/25f5d2468cd2ca8712249b6f89b12bac?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/empaempa">empaempa</a>
        </li>
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/aecc642f996c6be3b112c8dd96c0fe7d?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/subblue">subblue</a>
        </li>
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/a847d749f65088c41658483df5c550d9?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/olov">olov</a>
        </li>
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/ca76ffb0048a2a324251e8bd2b510cee?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/fserb">fserb</a>
        </li>
      </ul>
    </div>
  </div>


    <div class="frames">
      <div class="frame frame-center" data-path="build/GLOW.js/" data-permalink-url="/empaempa/GLOW/blob/abe60599e4df08f0151e741e31f4b181cb1db3b5/build/GLOW.js" data-title="GLOW/build/GLOW.js at master · empaempa/GLOW · GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>160 lines (159 sloc)</span>
                <span>73.381 kb</span>
              </div>
              <ul class="button-group actions">
                  <li>
                    <a class="grouped-button file-edit-link minibutton bigger lighter js-rewrite-sha" href="/empaempa/GLOW/edit/abe60599e4df08f0151e741e31f4b181cb1db3b5/build/GLOW.js" data-method="post" rel="nofollow" data-hotkey="e">Edit</a>
                  </li>
                <li>
                  <a href="/empaempa/GLOW/raw/master/build/GLOW.js" class="minibutton grouped-button bigger lighter" id="raw-url">Raw</a>
                </li>
                  <li>
                    <a href="/empaempa/GLOW/blame/master/build/GLOW.js" class="minibutton grouped-button bigger lighter">Blame</a>
                  </li>
                <li>
                  <a href="/empaempa/GLOW/commits/master/build/GLOW.js" class="minibutton grouped-button bigger lighter" rel="nofollow">History</a>
                </li>
              </ul>
            </div>
              <div class="data type-javascript">
      <table cellpadding="0" cellspacing="0" class="lines">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>
<span id="L42" rel="#L42">42</span>
<span id="L43" rel="#L43">43</span>
<span id="L44" rel="#L44">44</span>
<span id="L45" rel="#L45">45</span>
<span id="L46" rel="#L46">46</span>
<span id="L47" rel="#L47">47</span>
<span id="L48" rel="#L48">48</span>
<span id="L49" rel="#L49">49</span>
<span id="L50" rel="#L50">50</span>
<span id="L51" rel="#L51">51</span>
<span id="L52" rel="#L52">52</span>
<span id="L53" rel="#L53">53</span>
<span id="L54" rel="#L54">54</span>
<span id="L55" rel="#L55">55</span>
<span id="L56" rel="#L56">56</span>
<span id="L57" rel="#L57">57</span>
<span id="L58" rel="#L58">58</span>
<span id="L59" rel="#L59">59</span>
<span id="L60" rel="#L60">60</span>
<span id="L61" rel="#L61">61</span>
<span id="L62" rel="#L62">62</span>
<span id="L63" rel="#L63">63</span>
<span id="L64" rel="#L64">64</span>
<span id="L65" rel="#L65">65</span>
<span id="L66" rel="#L66">66</span>
<span id="L67" rel="#L67">67</span>
<span id="L68" rel="#L68">68</span>
<span id="L69" rel="#L69">69</span>
<span id="L70" rel="#L70">70</span>
<span id="L71" rel="#L71">71</span>
<span id="L72" rel="#L72">72</span>
<span id="L73" rel="#L73">73</span>
<span id="L74" rel="#L74">74</span>
<span id="L75" rel="#L75">75</span>
<span id="L76" rel="#L76">76</span>
<span id="L77" rel="#L77">77</span>
<span id="L78" rel="#L78">78</span>
<span id="L79" rel="#L79">79</span>
<span id="L80" rel="#L80">80</span>
<span id="L81" rel="#L81">81</span>
<span id="L82" rel="#L82">82</span>
<span id="L83" rel="#L83">83</span>
<span id="L84" rel="#L84">84</span>
<span id="L85" rel="#L85">85</span>
<span id="L86" rel="#L86">86</span>
<span id="L87" rel="#L87">87</span>
<span id="L88" rel="#L88">88</span>
<span id="L89" rel="#L89">89</span>
<span id="L90" rel="#L90">90</span>
<span id="L91" rel="#L91">91</span>
<span id="L92" rel="#L92">92</span>
<span id="L93" rel="#L93">93</span>
<span id="L94" rel="#L94">94</span>
<span id="L95" rel="#L95">95</span>
<span id="L96" rel="#L96">96</span>
<span id="L97" rel="#L97">97</span>
<span id="L98" rel="#L98">98</span>
<span id="L99" rel="#L99">99</span>
<span id="L100" rel="#L100">100</span>
<span id="L101" rel="#L101">101</span>
<span id="L102" rel="#L102">102</span>
<span id="L103" rel="#L103">103</span>
<span id="L104" rel="#L104">104</span>
<span id="L105" rel="#L105">105</span>
<span id="L106" rel="#L106">106</span>
<span id="L107" rel="#L107">107</span>
<span id="L108" rel="#L108">108</span>
<span id="L109" rel="#L109">109</span>
<span id="L110" rel="#L110">110</span>
<span id="L111" rel="#L111">111</span>
<span id="L112" rel="#L112">112</span>
<span id="L113" rel="#L113">113</span>
<span id="L114" rel="#L114">114</span>
<span id="L115" rel="#L115">115</span>
<span id="L116" rel="#L116">116</span>
<span id="L117" rel="#L117">117</span>
<span id="L118" rel="#L118">118</span>
<span id="L119" rel="#L119">119</span>
<span id="L120" rel="#L120">120</span>
<span id="L121" rel="#L121">121</span>
<span id="L122" rel="#L122">122</span>
<span id="L123" rel="#L123">123</span>
<span id="L124" rel="#L124">124</span>
<span id="L125" rel="#L125">125</span>
<span id="L126" rel="#L126">126</span>
<span id="L127" rel="#L127">127</span>
<span id="L128" rel="#L128">128</span>
<span id="L129" rel="#L129">129</span>
<span id="L130" rel="#L130">130</span>
<span id="L131" rel="#L131">131</span>
<span id="L132" rel="#L132">132</span>
<span id="L133" rel="#L133">133</span>
<span id="L134" rel="#L134">134</span>
<span id="L135" rel="#L135">135</span>
<span id="L136" rel="#L136">136</span>
<span id="L137" rel="#L137">137</span>
<span id="L138" rel="#L138">138</span>
<span id="L139" rel="#L139">139</span>
<span id="L140" rel="#L140">140</span>
<span id="L141" rel="#L141">141</span>
<span id="L142" rel="#L142">142</span>
<span id="L143" rel="#L143">143</span>
<span id="L144" rel="#L144">144</span>
<span id="L145" rel="#L145">145</span>
<span id="L146" rel="#L146">146</span>
<span id="L147" rel="#L147">147</span>
<span id="L148" rel="#L148">148</span>
<span id="L149" rel="#L149">149</span>
<span id="L150" rel="#L150">150</span>
<span id="L151" rel="#L151">151</span>
<span id="L152" rel="#L152">152</span>
<span id="L153" rel="#L153">153</span>
<span id="L154" rel="#L154">154</span>
<span id="L155" rel="#L155">155</span>
<span id="L156" rel="#L156">156</span>
<span id="L157" rel="#L157">157</span>
<span id="L158" rel="#L158">158</span>
<span id="L159" rel="#L159">159</span>
</pre>
          </td>
          <td width="100%">
                <div class="highlight"><pre><div class='line' id='LC1'><span class="c1">// GLOW.js r1.1 - http://github.com/empaempa/GLOW</span></div><div class='line' id='LC2'><span class="kd">var</span> <span class="nx">GLOW</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">flags</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">callback</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{},</span><span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">f</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">dispatch</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">flags</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">callback</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">context</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">callback</span><span class="p">(</span><span class="nx">c</span><span class="p">))};</span><span class="nx">a</span><span class="p">.</span><span class="nx">LOGS</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">WARNINGS</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ERRORS</span><span class="o">=</span><span class="mi">4</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">logFlags</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ERRORS</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentContext</span><span class="o">=</span><span class="p">{};</span><span class="nx">a</span><span class="p">.</span><span class="nx">registerContext</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">enableContext</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">getContextById</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="k">return</span> <span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;Couldn&#39;t find context id &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;, returning current with id &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentContext</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">currentContext</span><span class="p">};</span></div><div class='line' id='LC3'><span class="nx">a</span><span class="p">.</span><span class="nx">enableContext</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentContext</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">getContextById</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="nx">GL</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">GL</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentContext</span><span class="p">.</span><span class="nx">GL</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">uniqueId</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">++</span><span class="nx">f</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">log</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">logFlags</span><span class="o">&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">LOGS</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">dispatch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">LOGS</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">warn</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">logFlags</span><span class="o">&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">WARNINGS</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">dispatch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">WARNINGS</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">logFlags</span><span class="o">&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">ERRORS</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">dispatch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">ERRORS</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">));</span><span class="k">return</span> <span class="nx">e</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]};</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC4'><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="o">!==-</span><span class="mi">1</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;GLOW.removeEventListener: Couldn&#39;t find listener object&quot;</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">dispatch</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">--</span><span class="p">;)</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">dispatch</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)};</span><span class="k">return</span> <span class="nx">a</span><span class="p">}(),</span><span class="nx">GL</span><span class="o">=</span><span class="p">{};</span></div><div class='line' id='LC5'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Context</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="p">{});</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="o">:</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">uniqueId</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">alpha</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">alpha</span><span class="o">:!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">depth</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">depth</span><span class="o">:!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">antialias</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">antialias</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">antialias</span><span class="o">:!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">stencil</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">stencil</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">premultipliedAlpha</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">premultipliedAlpha</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">premultipliedAlpha</span><span class="o">:!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">preserveDrawingBuffer</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">preserveDrawingBuffer</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">preserveDrawingBuffer</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">innerWidth</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span></div><div class='line' id='LC6'><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">innerHeight</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">cache</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Cache</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">debug</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">debug</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">debug</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">context</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">GL</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">context</span><span class="p">,</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">registerContext</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">domElement</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">debug</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">WebGLDebugUtils</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">domElement</span><span class="o">=</span><span class="nx">WebGLDebugUtils</span><span class="p">.</span><span class="nx">makeLostContextSimulatingCanvas</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">domElement</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">GL</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">domElement</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;experimental-webgl&quot;</span><span class="p">,{</span><span class="nx">alpha</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">alpha</span><span class="p">,</span><span class="nx">depth</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="p">,</span><span class="nx">antialias</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">antialias</span><span class="p">,</span><span class="nx">stencil</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="p">,</span><span class="nx">premultipliedAlpha</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">premultipliedAlpha</span><span class="p">,</span></div><div class='line' id='LC7'><span class="nx">preserveDrawingBuffer</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">preserveDrawingBuffer</span><span class="p">})}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Context.construct: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">GL</span><span class="o">!==</span><span class="kc">null</span><span class="p">){</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">registerContext</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">domElement</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">domElement</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="o">?</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">x</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">y</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">width</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">height</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">}</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="o">=</span></div><div class='line' id='LC8'><span class="p">{</span><span class="nx">r</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">red</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">red</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">green</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">green</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">blue</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">blue</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">alpha</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">alpha</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">depth</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">depth</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">depth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">bits</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">bits</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">bits</span><span class="o">:-</span><span class="mi">1</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">===-</span><span class="mi">1</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">COLOR_BUFFER_BIT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">|=</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">DEPTH_BUFFER_BIT</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">|=</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">STENCIL_BUFFER_BIT</span><span class="o">:</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="o">=</span><span class="p">{</span><span class="nx">r</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">depth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">bits</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">=</span></div><div class='line' id='LC9'><span class="nx">GL</span><span class="p">.</span><span class="nx">COLOR_BUFFER_BIT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">|=</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">DEPTH_BUFFER_BIT</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">|=</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">STENCIL_BUFFER_BIT</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">enableCulling</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,{</span><span class="nx">frontFace</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">CCW</span><span class="p">,</span><span class="nx">cullFace</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">BACK</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">enableDepthTest</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,{</span><span class="nx">func</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">LEQUAL</span><span class="p">,</span><span class="nx">write</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">zNear</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">zFar</span><span class="o">:</span><span class="mi">1</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">enableBlend</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setViewport</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">clear</span><span class="p">()}</span><span class="k">else</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Context.construct: unable to initialize WebGL&quot;</span><span class="p">)}}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setupClear</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">red</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">red</span><span class="p">))</span><span class="o">:</span></div><div class='line' id='LC10'><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">green</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">green</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">blue</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">blue</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">alpha</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">alpha</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">depth</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">depth</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">depth</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">depth</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">bits</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">bits</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="p">;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">clearColor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span></div><div class='line' id='LC11'><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">clearDepth</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">depth</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setupClear</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">clear</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">enableBlend</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">enable</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">BLEND</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">setupBlend</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">disable</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">BLEND</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setupBlend</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">equationRGB</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">equationAlpha</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">blendEquationSeparate</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">equationRGB</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">equationAlpha</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">srcRGB</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">blendFuncSeparate</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">srcRGB</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">dstRGB</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">srcAlpha</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">dstAlpha</span><span class="p">))</span><span class="o">:</span></div><div class='line' id='LC12'><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">equation</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">blendEquation</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">equation</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">blendFunc</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">dst</span><span class="p">));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">enableDepthTest</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">enable</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">DEPTH_TEST</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">setupDepthTest</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">disable</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">DEPTH_TEST</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setupDepthTest</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">func</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">depthFunc</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">func</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">write</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">depthMask</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">write</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">zNear</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">zFar</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">zNear</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">zFar</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">depthRange</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">zNear</span><span class="p">)),</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">zFar</span><span class="p">)));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">enablePolygonOffset</span><span class="o">=</span></div><div class='line' id='LC13'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">enable</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">POLYGON_OFFSET_FILL</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">setupPolygonOffset</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">disable</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">POLYGON_OFFSET_FILL</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setupPolygonOffset</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">factor</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">units</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">polygonOffset</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">factor</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">units</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">enableStencilTest</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">enable</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">STENCIL_TEST</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">setupStencilTest</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">disable</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">STENCIL_TEST</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setupStencilTest</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">func</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">funcFace</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">stencilFuncSeparate</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">funcFace</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">func</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">funcRef</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">funcMask</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">func</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC14'><span class="nx">GL</span><span class="p">.</span><span class="nx">stencilFunc</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">func</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">funcRef</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">funcMask</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">mask</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">maskFace</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">stencilMaskSeparate</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">maskFace</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">mask</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">mask</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">stencilMask</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">mask</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">opFail</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">opFace</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">stencilOpSeparate</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">opFace</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">opFail</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">opZfail</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">opZpass</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">opFail</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">stencilOp</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">opFail</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">opZfail</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">opZpass</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">enableCulling</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">enable</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">CULL_FACE</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">setupCulling</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">disable</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">CULL_FACE</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setupCulling</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">frontFace</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">frontFace</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">frontFace</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">cullFace</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC15'><span class="nx">GL</span><span class="p">.</span><span class="nx">cullFace</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">cullFace</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Context.setupCulling: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">enableScissor</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">enable</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">SCISSOR_TEST</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">setupScissor</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">disable</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">SCISSOR_TEST</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setupScissor</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">GL</span><span class="p">.</span><span class="nx">scissor</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Context.setupScissorTest: &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setViewport</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">setupViewport</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setupViewport</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span></div><div class='line' id='LC16'><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">viewport</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">availableExtensions</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">GL</span><span class="p">.</span><span class="nx">getSupportedExtensions</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">enableExtension</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getSupportedExtensions</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span></div><div class='line' id='LC17'><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">())</span><span class="k">break</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">!==</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span> <span class="nx">GL</span><span class="p">.</span><span class="nx">getExtension</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">])};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getParameter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">GL</span><span class="p">.</span><span class="nx">getParameter</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">maxVertexTextureImageUnits</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">getParameter</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">MAX_VERTEX_TEXTURE_IMAGE_UNITS</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">resize</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">width</span><span class="o">*=</span><span class="nx">a</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">height</span><span class="o">*=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">domElement</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">domElement</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">c</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC18'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Compiler</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="nx">b</span><span class="p">.</span><span class="nx">compile</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">currentContext</span><span class="p">.</span><span class="nx">cache</span><span class="p">.</span><span class="nx">codeCompiled</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">vertexShader</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">fragmentShader</span><span class="p">);</span><span class="nx">c</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">linkProgram</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">compileVertexShader</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">vertexShader</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">compileFragmentShader</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">fragmentShader</span><span class="p">)),</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">currentContext</span><span class="p">.</span><span class="nx">cache</span><span class="p">.</span><span class="nx">addCompiledProgram</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createUniforms</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">extractUniforms</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createAttributes</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">extractAttributes</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">usage</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">interleave</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">interleaveAttributes</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">interleave</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">elements</span><span class="p">)</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Compiler.compile: .elements is no longer supported, please use .indices combined with .primitives&quot;</span><span class="p">);</span></div><div class='line' id='LC19'><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indices</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">primitives</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">primitives</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TRIANGLES</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">usage</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">usage</span><span class="o">:</span><span class="p">{},</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">primitives</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">triangles</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">triangles</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">triangles</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">triangleStrip</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">triangleStrip</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TRIANGLE_STRIP</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">triangleStrip</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">triangleFan</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">triangleFan</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TRIANGLE_FAN</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">triangleFan</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">points</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">POINTS</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">points</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">lines</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lines</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">LINES</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">lines</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineLoop</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineLoop</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">LINE_LOOP</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">lineLoop</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineStrip</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineStrip</span><span class="p">,</span></div><div class='line' id='LC20'><span class="nx">i</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">LINE_STRIP</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">lineStrip</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">data</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="nx">e</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">size</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">m</span> <span class="k">in</span> <span class="nx">g</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span> <span class="k">in</span> <span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">].</span><span class="nx">attributes</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">].</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">].</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">size</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">break</span><span class="p">}</span><span class="nx">h</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">)}</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElements</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">k</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">CompiledData</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">)}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">compileVertexShader</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">createShader</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">VERTEX_SHADER</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">uniqueId</span><span class="p">();</span><span class="nx">GL</span><span class="p">.</span><span class="nx">shaderSource</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">compileShader</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="o">!</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getShaderParameter</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">COMPILE_STATUS</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC21'><span class="o">!</span><span class="nx">GL</span><span class="p">.</span><span class="nx">isContextLost</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Compiler.compileVertexShader: &quot;</span><span class="o">+</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getShaderInfoLog</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">compileFragmentShader</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">createShader</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAGMENT_SHADER</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">uniqueId</span><span class="p">();</span><span class="nx">GL</span><span class="p">.</span><span class="nx">shaderSource</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">compileShader</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="o">!</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getShaderParameter</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">COMPILE_STATUS</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">GL</span><span class="p">.</span><span class="nx">isContextLost</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Compiler.compileFragmentShader: &quot;</span><span class="o">+</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getShaderInfoLog</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">linkProgram</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">createProgram</span><span class="p">();</span><span class="nx">b</span><span class="o">||</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Compiler.linkProgram: Could not create program&quot;</span><span class="p">);</span></div><div class='line' id='LC22'><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">uniqueId</span><span class="p">();</span><span class="nx">GL</span><span class="p">.</span><span class="nx">attachShader</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">attachShader</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">linkProgram</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="o">!</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getProgramParameter</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">LINK_STATUS</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">GL</span><span class="p">.</span><span class="nx">isContextLost</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Compiler.linkProgram: Could not initialise program&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">extractUniforms</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getProgramParameter</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">ACTIVE_UNIFORMS</span><span class="p">);</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getActiveUniform</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">b</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">size</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">location</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getUniformLocation</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">locationNumber</span><span class="o">:</span><span class="nx">e</span><span class="p">},</span></div><div class='line' id='LC23'><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">else</span> <span class="k">break</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">extractAttributes</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getProgramParameter</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">ACTIVE_ATTRIBUTES</span><span class="p">);</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getActiveAttrib</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">b</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">location</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getAttribLocation</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">),</span><span class="nx">locationNumber</span><span class="o">:</span><span class="nx">e</span><span class="p">},</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">else</span> <span class="k">break</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">highestAttributeNumber</span><span class="o">=</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">createUniforms</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">{},</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="k">instanceof</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Uniform</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;GLOW.Compiler.createUniforms: missing data for uniform &quot;</span><span class="o">+</span></div><div class='line' id='LC24'><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;. Creating anyway, but make sure to set data before drawing.&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Uniform</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]),</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">type</span><span class="o">===</span><span class="nx">GL</span><span class="p">.</span><span class="nx">SAMPLER_2D</span><span class="o">||</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">type</span><span class="o">===</span><span class="nx">GL</span><span class="p">.</span><span class="nx">SAMPLER_CUBE</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">textureUnit</span><span class="o">=</span><span class="nx">i</span><span class="o">++</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">data</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">data</span><span class="p">.</span><span class="nx">init</span><span class="p">();</span><span class="k">return</span> <span class="nx">e</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">createAttributes</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="p">{},</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="p">{},</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="k">instanceof</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Attribute</span><span class="o">?</span><span class="nx">j</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;GLOW.Compiler.createAttributes: missing data for attribute &quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;. Creating anyway, but make sure to set data before drawing.&quot;</span><span class="p">),</span></div><div class='line' id='LC25'><span class="nx">j</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Attribute</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">:!</span><span class="mi">0</span><span class="p">));</span><span class="k">return</span> <span class="nx">j</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">interleaveAttributes</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="p">{},</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="p">[];</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">e</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">interleaved</span><span class="o">===!</span><span class="mi">0</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">interleaved</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">data</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">bufferData</span><span class="p">()}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span><span class="o">=</span><span class="p">[]),</span><span class="nx">j</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">]].</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]));</span><span class="kd">var</span> <span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span></div><div class='line' id='LC26'><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">+</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">g</span><span class="p">].</span><span class="nx">size</span><span class="o">*</span><span class="mi">4</span><span class="o">&gt;</span><span class="mi">255</span><span class="p">){</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;GLOW.Compiler.interleaveAttributes: Stride owerflow, moving attributes to new interleave index. Please check your interleave setup!&quot;</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="p">[];</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;)</span><span class="nx">j</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">g</span><span class="p">]),</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">splice</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">h</span><span class="o">--</span><span class="p">}</span><span class="k">else</span> <span class="nx">k</span><span class="o">+=</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">g</span><span class="p">].</span><span class="nx">size</span><span class="o">*</span><span class="mi">4</span><span class="p">}</span><span class="nx">l</span><span class="o">=</span><span class="p">{};</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">){</span><span class="nx">k</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">k</span><span class="o">+=</span><span class="nx">g</span><span class="o">!==</span><span class="nx">h</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">g</span><span class="p">].</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;_&quot;</span><span class="o">:</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">g</span><span class="p">].</span><span class="nx">name</span><span class="p">;</span><span class="nx">l</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">InterleavedAttributes</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">])}</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="k">return</span> <span class="nx">l</span><span class="p">}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElements</span><span class="o">=</span></div><div class='line' id='LC27'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Elements</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Elements</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC28'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">CompiledData</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">program</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">uniforms</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributeArray</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">attributeArray</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">uniformArray</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">createArrays</span><span class="p">()}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">createArrays</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">uniformArray</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">attributeArray</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributeArray</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">uniformArray</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">a</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">attributeArray</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span></div><div class='line' id='LC29'><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributeArray</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="p">[</span><span class="nx">b</span><span class="p">])};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">CompiledData</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="p">{},</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="k">instanceof</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Uniform</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">execept</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Uniform</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]),</span><span class="nx">c</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">type</span><span class="o">===</span><span class="nx">GL</span><span class="p">.</span><span class="nx">SAMPLER_2D</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">type</span><span class="o">===</span><span class="nx">GL</span><span class="p">.</span><span class="nx">SAMPLER_CUBE</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">textureUnit</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">textureUnit</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">data</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">data</span><span class="p">.</span><span class="nx">init</span><span class="p">()}</span><span class="k">else</span> <span class="nx">c</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span></div><div class='line' id='LC30'><span class="k">this</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="k">instanceof</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Attribute</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">:</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Attribute</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">elements</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indices</span><span class="o">?</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Elements</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">indices</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">primitives</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">elements</span> <span class="k">instanceof</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Elements</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">elements</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">program</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">program</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">program</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">program</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">createArrays</span><span class="p">();</span><span class="k">return</span> <span class="nx">c</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">dispose</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span></div><div class='line' id='LC31'><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">uniformArray</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">--</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">uniformArray</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">dispose</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">attributeArray</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">--</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">attributeArray</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">dispose</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributeArray</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">--</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributeArray</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">dispose</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="p">.</span><span class="nx">dispose</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">isProgram</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">program</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getAttachedShaders</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">program</span><span class="p">))){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">GL</span><span class="p">.</span><span class="nx">detachShader</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">program</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]),</span><span class="nx">GL</span><span class="p">.</span><span class="nx">deleteShader</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">deleteProgram</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">program</span><span class="p">)}</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">program</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="p">;</span></div><div class='line' id='LC32'><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">uniformArray</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">attributeArray</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributeArray</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC33'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Cache</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">highestAttributeNumber</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">uniformByLocation</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">attributeByLocation</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">textureByLocation</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledCode</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">programId</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">elementId</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">active</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">codeCompiled</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledCode</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledCode</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">a</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">vertexShader</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">fragmentShader</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="nx">g</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledCode</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">vertexShader</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">fragmentShader</span><span class="o">:</span><span class="nx">c</span><span class="p">});</span><span class="k">else</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">compiledCode</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">program</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addCompiledProgram</span><span class="o">=</span></div><div class='line' id='LC34'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledCode</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledCode</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">program</span><span class="o">=</span><span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">programCached</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">active</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">programId</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">programId</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">uniformByLocation</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">attributeByLocation</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textureByLocation</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">elementId</span><span class="o">=-</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setProgramHighestAttributeNumber</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">highestAttributeNumber</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">highestAttributeNumber</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">highestAttributeNumber</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">highestAttributeNumber</span><span class="o">-</span><span class="nx">c</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">uniformCached</span><span class="o">=</span></div><div class='line' id='LC35'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">active</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">uniformByLocation</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">locationNumber</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">uniformByLocation</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">locationNumber</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">invalidateUniform</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">uniformByLocation</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">locationNumber</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">attributeCached</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">active</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">attributeByLocation</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">locationNumber</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">attributeByLocation</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">locationNumber</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">interleavedAttributeCached</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">active</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attributes</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span></div><div class='line' id='LC36'><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">attributeByLocation</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">locationNumber</span><span class="p">]</span><span class="o">===</span><span class="nx">e</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">attributeByLocation</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">locationNumber</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">id</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">invalidateAttribute</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">attributeByLocation</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">locationNumber</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">textureCached</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">active</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureByLocation</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textureByLocation</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">invalidateTexture</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">textureByLocation</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">elementsCached</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">active</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="o">===</span></div><div class='line' id='LC37'><span class="k">this</span><span class="p">.</span><span class="nx">elementId</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">elementId</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">invalidateElements</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">elementId</span><span class="o">=-</span><span class="mi">1</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">highestAttributeNumber</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">uniformByLocation</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">attributeByLocation</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textureByLocation</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">programId</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">elementId</span><span class="o">=-</span><span class="mi">1</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC38'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">FBO</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">uniqueId</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">size</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">innerWidth</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">size</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">innerHeight</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">wrapS</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">wrapS</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">wrap</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">CLAMP_TO_EDGE</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">wrapT</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">wrapT</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">wrap</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">CLAMP_TO_EDGE</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">magFilter</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">magFilter</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">LINEAR</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">minFilter</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">minFilter</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">LINEAR</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">internalFormat</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">internalFormat</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RGBA</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">format</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RGBA</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">UNSIGNED_BYTE</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">depth</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">depth</span><span class="o">:</span></div><div class='line' id='LC39'><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">stencil</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">stencil</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">||</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isBound</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textureUnit</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">cube</span><span class="o">!==!</span><span class="mi">0</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_2D</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_CUBE_MAP</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="o">?</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">x</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">y</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">width</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">height</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">}</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="o">=</span><span class="p">{</span><span class="nx">r</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">red</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span></div><div class='line' id='LC40'><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">red</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">green</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">green</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">blue</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">blue</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">alpha</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">alpha</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">depth</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">depth</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">depth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">bits</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">bits</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="p">.</span><span class="nx">bits</span><span class="o">:-</span><span class="mi">1</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">===-</span><span class="mi">1</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">COLOR_BUFFER_BIT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">|=</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">DEPTH_BUFFER_BIT</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">|=</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">STENCIL_BUFFER_BIT</span><span class="o">:</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="o">=</span><span class="p">{</span><span class="nx">r</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">depth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">bits</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">COLOR_BUFFER_BIT</span><span class="p">,</span></div><div class='line' id='LC41'><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">|=</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">DEPTH_BUFFER_BIT</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">|=</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">STENCIL_BUFFER_BIT</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">createBuffers</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">posX</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">negX</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">posY</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">negY</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">posZ</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">negZ</span><span class="o">:</span><span class="mi">5</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">createBuffers</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">createTexture</span><span class="p">();</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getError</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">!==</span><span class="nx">GL</span><span class="p">.</span><span class="nx">NO_ERROR</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">!==</span><span class="nx">GL</span><span class="p">.</span><span class="nx">CONTEXT_LOST_WEBGL</span><span class="p">)</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.FBO.createBuffers: Error creating render texture.&quot;</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindTexture</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texParameteri</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_WRAP_S</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">wrapS</span><span class="p">);</span></div><div class='line' id='LC42'><span class="nx">GL</span><span class="p">.</span><span class="nx">texParameteri</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_WRAP_T</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">wrapT</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texParameteri</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_MAG_FILTER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">magFilter</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texParameteri</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_MIN_FILTER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">minFilter</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="o">===</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_2D</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">===</span><span class="kc">null</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span> <span class="k">instanceof</span> <span class="nx">Uint8Array</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span> <span class="k">instanceof</span> <span class="nx">Float32Array</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texImage2D</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">internalFormat</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texImage2D</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">internalFormat</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="p">,</span></div><div class='line' id='LC43'><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texImage2D</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_CUBE_MAP_POSITIVE_X</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">internalFormat</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">renderBuffer</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">createRenderbuffer</span><span class="p">();</span><span class="nx">c</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getError</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">!==</span><span class="nx">GL</span><span class="p">.</span><span class="nx">NO_ERROR</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">!==</span><span class="nx">GL</span><span class="p">.</span><span class="nx">CONTEXT_LOST_WEBGL</span><span class="p">){</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.FBO.createBuffers: Error creating render buffer.&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindRenderbuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RENDERBUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">renderBuffer</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">renderbufferStorage</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RENDERBUFFER</span><span class="p">,</span></div><div class='line' id='LC44'><span class="nx">GL</span><span class="p">.</span><span class="nx">DEPTH_COMPONENT16</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">:!</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">renderbufferStorage</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RENDERBUFFER</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">STENCIL_INDEX8</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">renderbufferStorage</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RENDERBUFFER</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">DEPTH_STENCIL</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="o">===</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_2D</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">frameBuffer</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">createFramebuffer</span><span class="p">();</span><span class="nx">c</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getError</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">!==</span><span class="nx">GL</span><span class="p">.</span><span class="nx">NO_ERROR</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">!==</span><span class="nx">GL</span><span class="p">.</span><span class="nx">CONTEXT_LOST_WEBGL</span><span class="p">){</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.FBO.createBuffers: Error creating frame buffer.&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindFramebuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAMEBUFFER</span><span class="p">,</span></div><div class='line' id='LC45'><span class="k">this</span><span class="p">.</span><span class="nx">frameBuffer</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">framebufferTexture2D</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAMEBUFFER</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">COLOR_ATTACHMENT0</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_2D</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">framebufferRenderbuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAMEBUFFER</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">DEPTH_ATTACHMENT</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RENDERBUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">renderBuffer</span><span class="p">)</span><span class="o">:!</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">framebufferRenderbuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAMEBUFFER</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">STENCIL_ATTACHMENT</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RENDERBUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">renderBuffer</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">framebufferRenderbuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAMEBUFFER</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">DEPTH_STENCIL_ATTACHMENT</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RENDERBUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">renderBuffer</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">frameBuffers</span><span class="o">=</span></div><div class='line' id='LC46'><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">frameBuffers</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">createFramebuffer</span><span class="p">();</span><span class="nx">c</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">getError</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">!==</span><span class="nx">GL</span><span class="p">.</span><span class="nx">NO_ERROR</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">!==</span><span class="nx">GL</span><span class="p">.</span><span class="nx">CONTEXT_LOST_WEBGL</span><span class="p">){</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.FBO.createBuffers: Error creating frame buffer for side &quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindFramebuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAMEBUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">frameBuffers</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">framebufferTexture2D</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAMEBUFFER</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">COLOR_ATTACHMENT0</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_CUBE_MAP_POSITIVE_X</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">framebufferRenderbuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAMEBUFFER</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">DEPTH_ATTACHMENT</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RENDERBUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">renderBuffer</span><span class="p">)</span><span class="o">:</span></div><div class='line' id='LC47'><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">framebufferRenderbuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAMEBUFFER</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">STENCIL_ATTACHMENT</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RENDERBUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">renderBuffer</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">depth</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">stencil</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">framebufferRenderbuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAMEBUFFER</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">DEPTH_STENCIL_ATTACHMENT</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RENDERBUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">renderBuffer</span><span class="p">)}}</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindTexture</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindRenderbuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RENDERBUFFER</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindFramebuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAMEBUFFER</span><span class="p">,</span><span class="kc">null</span><span class="p">)}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">deleteBuffers</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">deleteTexture</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">renderBuffer</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">deleteRenderbuffer</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">renderBuffer</span><span class="p">);</span></div><div class='line' id='LC48'><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="o">===</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_2D</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">frameBuffer</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">deleteFramebuffer</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">frameBuffer</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">GL</span><span class="p">.</span><span class="nx">deleteFramebuffer</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">frameBuffers</span><span class="p">[</span><span class="nx">c</span><span class="p">])};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">init</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bind</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">isBound</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">isBound</span><span class="o">=!</span><span class="mi">0</span><span class="p">,(</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">setupViewport</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="o">===</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_2D</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindFramebuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAMEBUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">frameBuffer</span><span class="p">)</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindFramebuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAMEBUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">frameBuffers</span><span class="p">[</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="s2">&quot;posX&quot;</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">unbind</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isBound</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">isBound</span><span class="o">=</span></div><div class='line' id='LC49'><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindFramebuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FRAMEBUFFER</span><span class="p">,</span><span class="kc">null</span><span class="p">),(</span><span class="nx">a</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">||</span><span class="nx">a</span><span class="o">===!</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">viewport</span><span class="p">(</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">currentContext</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">currentContext</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">currentContext</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">currentContext</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setViewport</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">setupViewport</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setupViewport</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span></div><div class='line' id='LC50'><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">viewport</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setupClear</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">red</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">red</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">green</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">green</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">blue</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">blue</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">alpha</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span></div><div class='line' id='LC51'><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">alpha</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">depth</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">depth</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">depth</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">depth</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">bits</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">bits</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="p">;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">clearColor</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">clearDepth</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">depth</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">isBound</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">setupClear</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">GL</span><span class="p">.</span><span class="nx">clear</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">.</span><span class="nx">bits</span><span class="p">));</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">resize</span><span class="o">=</span></div><div class='line' id='LC52'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">width</span><span class="o">*=</span><span class="nx">a</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">.</span><span class="nx">height</span><span class="o">*=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">deleteBuffers</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">createBuffers</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">generateMipMaps</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindTexture</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">generateMipmap</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindTexture</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">dispose</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">deleteBuffers</span><span class="p">();</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderBuffer</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">frameBuffer</span><span class="p">;</span></div><div class='line' id='LC53'><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">frameBuffers</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">viewport</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">clearSettings</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC54'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Texture</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">url</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">url</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">uniqueId</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">autoUpdate</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">autoUpdate</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">internalFormat</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">internalFormat</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RGBA</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">format</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RGBA</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">UNSIGNED_BYTE</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">wrapS</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">wrapS</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">wrap</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">REPEAT</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">wrapT</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">wrapT</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">wrap</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">REPEAT</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">magFilter</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">magFilter</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">LINEAR</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">minFilter</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">minFilter</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">LINEAR_MIPMAP_LINEAR</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadComplete</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">onLoadComplete</span><span class="p">;</span></div><div class='line' id='LC55'><span class="k">this</span><span class="p">.</span><span class="nx">onLoadContext</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">onLoadContext</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">posX</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">negX</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">posY</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">negY</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">posZ</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">negZ</span><span class="o">:</span><span class="mi">5</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">init</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="nx">GL</span><span class="p">.</span><span class="nx">UNSIGNED_BYTE</span><span class="o">?</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="o">===</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RGBA</span><span class="o">?</span><span class="mi">4</span><span class="o">:</span><span class="mi">3</span><span class="p">))</span><span class="o">:</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="o">===</span><span class="nx">GL</span><span class="p">.</span><span class="nx">RGBA</span><span class="o">?</span><span class="mi">4</span><span class="o">:</span><span class="mi">3</span><span class="p">));</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_2D</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span></div><div class='line' id='LC56'><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.jpg&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.png&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.gif&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;jpeg&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="k">new</span> <span class="nx">Image</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">scope</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadImage</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">autoUpdate</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">autoUpdate</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;video&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">scope</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;loadeddata&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadVideo</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span> <span class="k">instanceof</span> <span class="nx">HTMLImageElement</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span> <span class="k">instanceof</span> <span class="nx">HTMLVideoElement</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span> <span class="k">instanceof</span> <span class="nx">HTMLCanvasElement</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span> <span class="k">instanceof</span></div><div class='line' id='LC57'><span class="nx">Uint8Array</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span> <span class="k">instanceof</span> <span class="nx">Float32Array</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_2D</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">createTexture</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_CUBE_MAP</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">itemsToLoad</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">itemsToLoad</span><span class="o">++:</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Texture.init: data type error. Did you forget cube map &quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;? If not, the data type is not supported&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">itemsToLoad</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">createTexture</span><span class="p">();</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.jpg&quot;</span><span class="p">)</span><span class="o">!==</span></div><div class='line' id='LC58'><span class="o">-</span><span class="mi">1</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.png&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.gif&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;jpeg&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">Image</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">scope</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">onload</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadCubeImage</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">autoUpdate</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">autoUpdate</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">autoUpdate</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">autoUpdate</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">:!</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">autoUpdate</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">autoUpdate</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;video&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">scope</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;loadeddata&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadCubeVideo</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">src</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">createTexture</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="o">!==</span></div><div class='line' id='LC59'><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">deleteTexture</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">createTexture</span><span class="p">();</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindTexture</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="o">===</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_2D</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span> <span class="k">instanceof</span> <span class="nx">Uint8Array</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texImage2D</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">internalFormat</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Texture.createTexture: Textures of type Uint8Array requires width and height parameters. Quitting.&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="k">else</span> <span class="nx">GL</span><span class="p">.</span><span class="nx">texImage2D</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span></div><div class='line' id='LC60'><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">internalFormat</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="k">instanceof</span> <span class="nx">Uint8Array</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="k">instanceof</span> <span class="nx">Float32Array</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texImage2D</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_CUBE_MAP_POSITIVE_X</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">internalFormat</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="k">else</span><span class="p">{</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Texture.createTexture: Textures of type Uint8Array/Float32Array requires width and height parameters. Quitting.&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="k">else</span> <span class="nx">GL</span><span class="p">.</span><span class="nx">texImage2D</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_CUBE_MAP_POSITIVE_X</span><span class="o">+</span></div><div class='line' id='LC61'><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">internalFormat</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texParameteri</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_WRAP_S</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">wrapS</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texParameteri</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_WRAP_T</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">wrapT</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texParameteri</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_MIN_FILTER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">minFilter</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texParameteri</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_MAG_FILTER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">magFilter</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">minFilter</span><span class="o">!==</span><span class="nx">GL</span><span class="p">.</span><span class="nx">NEAREST</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">minFilter</span><span class="o">!==</span><span class="nx">GL</span><span class="p">.</span><span class="nx">LINEAR</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">generateMipmap</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">updateTexture</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC62'><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="p">{},</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">level</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">xOffset</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">yOffset</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">updateMipmap</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">updateMipmap</span><span class="o">:!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindTexture</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="o">==</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_2D</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span> <span class="k">instanceof</span> <span class="nx">Uint8Array</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texSubImage2D</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texSubImage2D</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="k">instanceof</span> <span class="nx">Uint8Array</span><span class="o">?</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texSubImage2D</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_CUBE_MAP_POSITIVE_X</span><span class="o">+</span></div><div class='line' id='LC63'><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">texSubImage2D</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_CUBE_MAP_POSITIVE_X</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">]));</span><span class="k">this</span><span class="p">.</span><span class="nx">minFilter</span><span class="o">!==</span><span class="nx">GL</span><span class="p">.</span><span class="nx">NEAREST</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">minFilter</span><span class="o">!==</span><span class="nx">GL</span><span class="p">.</span><span class="nx">LINEAR</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">===!</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">generateMipmap</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="p">)}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">swapTexture</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">dispose</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onLoadImage</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">createTexture</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">onLoadComplete</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">onLoadComplete</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">onLoadContext</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">)};</span></div><div class='line' id='LC64'><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onLoadCubeImage</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">itemsToLoad</span><span class="o">--</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">itemsToLoad</span><span class="o">===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">createTexture</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onLoadVideo</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;loadeddata&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">onLoadVideo</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">createTexture</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onLoadCubeVideo</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;loadeddata&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">onLoadVideo</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">itemsToLoad</span><span class="o">--</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">itemsToLoad</span><span class="o">===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">createTexture</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">play</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureType</span><span class="o">===</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_2D</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span> <span class="k">instanceof</span></div><div class='line' id='LC65'><span class="nx">HTMLVideoElement</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">play</span><span class="p">();</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="k">instanceof</span> <span class="nx">HTMLVideoElement</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">play</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">dispose</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="nx">GL</span><span class="p">.</span><span class="nx">deleteTexture</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">texture</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC66'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Shader</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">uniqueId</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">use</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">use</span><span class="p">.</span><span class="nx">clone</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">except</span><span class="p">)</span><span class="o">:</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Compiler</span><span class="p">.</span><span class="nx">compile</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">uniforms</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">elements</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">program</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">program</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">attachData</span><span class="p">()}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">attachData</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">data</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">data</span><span class="o">:</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;GLOW.Shader.attachUniformAndAttributeData: no data for uniform &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;, not attaching for easy access. Please use Shader.uniforms.&quot;</span><span class="o">+</span></div><div class='line' id='LC67'><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;.data to set data.&quot;</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">data</span><span class="o">&amp;&amp;</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;GLOW.Shader.attachUniformAndAttributeData: name collision on uniform &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;, not attaching for easy access. Please use Shader.uniforms.&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;.data to access data.&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">attributes</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">attributes</span><span class="p">;</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;GLOW.Shader.attachUniformAndAttributeData: name collision on attribute &quot;</span><span class="o">+</span></div><div class='line' id='LC68'><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;, not attaching for easy access. Please use Shader.attributes.&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;.data to access data.&quot;</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="p">;</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">:</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;GLOW.Shader.attachUniformAndAttributeData: name collision on interleavedAttribute &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;, not attaching for easy access. Please use Shader.interleavedAttributes.&quot;</span><span class="o">+</span></div><div class='line' id='LC69'><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;.data to access data.&quot;</span><span class="p">)}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">draw</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">currentContext</span><span class="p">.</span><span class="nx">cache</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">programCached</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">program</span><span class="p">)){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">useProgram</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">program</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">setProgramHighestAttributeNumber</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">program</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">program</span><span class="p">.</span><span class="nx">highestAttributeNumber</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="o">-</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="k">for</span><span class="p">(;</span><span class="nx">g</span><span class="o">&lt;=</span><span class="nx">e</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">GL</span><span class="p">.</span><span class="nx">enableVertexAttribArray</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">--</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">g</span><span class="o">--</span><span class="p">)</span><span class="nx">GL</span><span class="p">.</span><span class="nx">disableVertexAttribArray</span><span class="p">(</span><span class="nx">g</span><span class="p">)}}</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attributeArray</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">interleaved</span><span class="o">===!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">attributeCached</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">||</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">bind</span><span class="p">());</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">interleavedAttributeArray</span><span class="p">;</span></div><div class='line' id='LC70'><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">b</span><span class="p">.</span><span class="nx">interleavedAttributeCached</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">||</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">bind</span><span class="p">();</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">uniformArray</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">b</span><span class="p">.</span><span class="nx">uniformCached</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">||</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">load</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">elements</span><span class="p">.</span><span class="nx">draw</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Shader</span><span class="p">({</span><span class="nx">use</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">,</span><span class="nx">except</span><span class="o">:</span><span class="nx">a</span><span class="p">})};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">dispose</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">)</span><span class="k">delete</span> <span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">attributes</span><span class="p">)</span><span class="k">delete</span> <span class="k">this</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="p">)</span><span class="k">delete</span> <span class="k">this</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">program</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">uniforms</span><span class="p">;</span></div><div class='line' id='LC71'><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">interleavedAttributes</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">dispose</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC72'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Elements</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">uniqueId</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TRIANGLES</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="nx">e</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">a</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">Uint16Array</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint16Array</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">createBuffer</span><span class="p">(),</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindBuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">ELEMENT_ARRAY_BUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="p">),</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bufferData</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">ELEMENT_ARRAY_BUFFER</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">STATIC_DRAW</span><span class="p">))}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">draw</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="p">(</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">currentContext</span><span class="p">.</span><span class="nx">cache</span><span class="p">.</span><span class="nx">elementsCached</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">||</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindBuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">ELEMENT_ARRAY_BUFFER</span><span class="p">,</span></div><div class='line' id='LC73'><span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="p">),</span><span class="nx">GL</span><span class="p">.</span><span class="nx">drawElements</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">UNSIGNED_SHORT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">))</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">drawArrays</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="p">{};</span><span class="k">return</span> <span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Elements</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">usage</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">offset</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">dispose</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">deleteBuffer</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="p">),</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="p">)};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC74'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Uniform</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(){</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">INT</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniform1iv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniform1fv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">INT_VEC2</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniform2iv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">INT_VEC3</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniform3iv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">INT_VEC4</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniform4iv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">BOOL</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniform1iv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">BOOL_VEC2</span><span class="p">]</span><span class="o">=</span></div><div class='line' id='LC75'><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniform2iv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">BOOL_VEC3</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniform3iv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">BOOL_VEC4</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniform4iv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT_VEC2</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniform2fv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT_VEC3</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniform3fv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT_VEC4</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniform4fv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT_MAT2</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniformMatrix2fv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span></div><div class='line' id='LC76'><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT_MAT3</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniformMatrix3fv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT_MAT4</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniformMatrix4fv</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="p">())};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">SAMPLER_2D</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">texture</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">textureUnit</span><span class="o">!==-</span><span class="mi">1</span><span class="o">&amp;&amp;!</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">currentContext</span><span class="p">.</span><span class="nx">cache</span><span class="p">.</span><span class="nx">textureCached</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureUnit</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniform1i</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">textureUnit</span><span class="p">),</span><span class="nx">GL</span><span class="p">.</span><span class="nx">activeTexture</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE0</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">textureUnit</span><span class="p">),</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindTexture</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_2D</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">texture</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">autoUpdate</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC77'><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">updateTexture</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">autoUpdate</span><span class="p">))};</span><span class="nx">f</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">SAMPLER_CUBE</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">texture</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">textureUnit</span><span class="o">!==-</span><span class="mi">1</span><span class="o">&amp;&amp;!</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">currentContext</span><span class="p">.</span><span class="nx">cache</span><span class="p">.</span><span class="nx">textureCached</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textureUnit</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">uniform1i</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">textureUnit</span><span class="p">),</span><span class="nx">GL</span><span class="p">.</span><span class="nx">activeTexture</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE0</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">textureUnit</span><span class="p">),</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindTexture</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">TEXTURE_CUBE_MAP</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">texture</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">autoUpdate</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">updateTexture</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">autoUpdate</span><span class="p">))}}</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">());</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">uniqueId</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span></div><div class='line' id='LC78'><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">location</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">locationNumber</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">locationNumber</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textureUnit</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">load</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">loadFunction</span><span class="o">||</span><span class="nx">f</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">]}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getNativeValue</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">value</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Uniform</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">dispose</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">load</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">};</span><span class="k">return</span> <span class="nx">a</span><span class="p">}();</span></div><div class='line' id='LC79'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Attribute</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">INT</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">INT_VEC2</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">INT_VEC3</span><span class="p">]</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">INT_VEC4</span><span class="p">]</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">BOOL</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">BOOL_VEC2</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">BOOL_VEC3</span><span class="p">]</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">BOOL_VEC4</span><span class="p">]</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT_VEC2</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT_VEC3</span><span class="p">]</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT_VEC4</span><span class="p">]</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT_MAT2</span><span class="p">]</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT_MAT3</span><span class="p">]</span><span class="o">=</span><span class="mi">9</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT_MAT4</span><span class="p">]</span><span class="o">=</span><span class="mi">16</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">uniqueId</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">location</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">locationNumber</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">locationNumber</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">stride</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">usage</span><span class="o">=</span><span class="nx">g</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">STATIC_DRAW</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">interleaved</span><span class="o">=</span><span class="nx">h</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span></div><div class='line' id='LC80'><span class="nx">h</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">size</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">size</span><span class="o">&gt;</span><span class="mi">65536</span><span class="o">&amp;&amp;</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;GLOW.Attribute.constructor: Unreachable attribute? Please activate GL.drawArrays or split into multiple shaders. Indexed elements cannot reach attribute data beyond 65535.&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">interleaved</span><span class="o">===!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">bufferData</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">usage</span><span class="p">))}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setupInterleave</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">interleaved</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stride</span><span class="o">=</span><span class="nx">b</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bufferData</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!==</span></div><div class='line' id='LC81'><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">!==</span><span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">usage</span><span class="o">!==</span><span class="nx">b</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">usage</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">createBuffer</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot; Array()&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindBuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">ARRAY_BUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bufferData</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">ARRAY_BUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">usage</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bind</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">interleaved</span><span class="o">===!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindBuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">ARRAY_BUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">vertexAttribPointer</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">GL</span><span class="p">.</span><span class="nx">FLOAT</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">stride</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">)};</span></div><div class='line' id='LC82'><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interleaved</span><span class="p">)</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Attribute.clone: Cannot clone interleaved attribute. Please check your interleave setup.&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="p">{},</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Attribute</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">usage</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">usage</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">interleaved</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">interleaved</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">dispose</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">deleteBuffer</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="p">),</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="p">);</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC83'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">InterleavedAttributes</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">uniqueId</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">size</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="p">[],</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">k</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">data</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">size</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">]);</span><span class="nx">k</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">usage</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">usage</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">usage</span><span class="o">!==</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">usage</span><span class="p">){</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;GLOW.InterleavedAttributes.construct: Attribute &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot; has different usage, defaulting to STATIC_DRAW.&quot;</span><span class="p">);</span></div><div class='line' id='LC84'><span class="k">this</span><span class="p">.</span><span class="nx">usage</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">STATIC_DRAW</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">bufferData</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">usage</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">size</span><span class="o">*</span><span class="mi">4</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">setupInterleave</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="o">+=</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">size</span><span class="o">*</span><span class="mi">4</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bufferData</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">!==</span><span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="o">=</span><span class="nx">GL</span><span class="p">.</span><span class="nx">createBuffer</span><span class="p">();</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindBuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">ARRAY_BUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="p">);</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bufferData</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">ARRAY_BUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">GL</span><span class="p">.</span><span class="nx">STATIC_DRAW</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bind</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GL</span><span class="p">.</span><span class="nx">bindBuffer</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">ARRAY_BUFFER</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">--</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">bind</span><span class="p">()};</span></div><div class='line' id='LC85'><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">dispose</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">GL</span><span class="p">.</span><span class="nx">deleteBuffer</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="p">),</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">buffer</span><span class="p">);</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">--</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">dispose</span><span class="p">();</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">attributes</span><span class="p">}};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC86'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Float</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="mi">0</span><span class="p">)}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">sub</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiply</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">divide</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">/=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">modulo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">%=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span></div><div class='line' id='LC87'><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC88'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Int</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="k">new</span> <span class="nx">Int32Array</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="k">new</span> <span class="nx">Int32Array</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="mi">0</span><span class="p">)}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">sub</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiply</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">divide</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">/=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">modulo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">%=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span></div><div class='line' id='LC89'><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Bool</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?!!</span><span class="nx">a</span><span class="o">:!</span><span class="mi">1</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=!!</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Bool2</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?!!</span><span class="nx">a</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?!!</span><span class="nx">b</span><span class="o">:!</span><span class="mi">1</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=!!</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=!!</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC90'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Bool3</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?!!</span><span class="nx">a</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?!!</span><span class="nx">b</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?!!</span><span class="nx">f</span><span class="o">:!</span><span class="mi">1</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=!!</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=!!</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=!!</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC91'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Bool4</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?!!</span><span class="nx">a</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?!!</span><span class="nx">b</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?!!</span><span class="nx">f</span><span class="o">:!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?!!</span><span class="nx">e</span><span class="o">:!</span><span class="mi">1</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=!!</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=!!</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=!!</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=!!</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC92'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector2</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="mi">0</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">copy</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addSelf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span></div><div class='line' id='LC93'><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">subSelf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">sub</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiplySelf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiply</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiplyScalar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span></div><div class='line' id='LC94'><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">negate</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=-</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=-</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">normalize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">multiplyScalar</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">());</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lengthSq</span><span class="p">())};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">lengthSq</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector2</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">])};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC95'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="mi">0</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">copy</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addSelf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC96'><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addScalar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">sub</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">subSelf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">cross</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span></div><div class='line' id='LC97'><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">crossSelf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="nx">h</span><span class="o">-</span><span class="nx">a</span><span class="o">*</span><span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">*</span><span class="nx">e</span><span class="o">-</span><span class="nx">b</span><span class="o">*</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">*</span><span class="nx">g</span><span class="o">-</span><span class="nx">f</span><span class="o">*</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiply</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiplySelf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*=</span></div><div class='line' id='LC98'><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiplyScalar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">divideSelf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">/=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">/=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">divideScalar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">/=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">/=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">negate</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=-</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=-</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=-</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">dot</span><span class="o">=</span></div><div class='line' id='LC99'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">distanceTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">distanceToSquared</span><span class="p">(</span><span class="nx">a</span><span class="p">))};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">distanceToSquared</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="nx">f</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">a</span><span class="o">*</span><span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lengthSq</span><span class="p">())};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">lengthSq</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">lengthManhattan</span><span class="o">=</span></div><div class='line' id='LC100'><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">normalize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="nx">a</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">multiplyScalar</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setPositionFromMatrix</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">12</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">13</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">14</span><span class="p">]};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setLength</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">normalize</span><span class="p">().</span><span class="nx">multiplyScalar</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">isZero</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">&lt;</span></div><div class='line' id='LC101'><span class="mf">1.0</span><span class="nx">E</span><span class="o">-</span><span class="mi">4</span><span class="o">&amp;&amp;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">&lt;</span><span class="mf">1.0</span><span class="nx">E</span><span class="o">-</span><span class="mi">4</span><span class="o">&amp;&amp;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">&lt;</span><span class="mf">1.0</span><span class="nx">E</span><span class="o">-</span><span class="mi">4</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">])};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC102'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector4</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="mi">0</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">copy</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span></div><div class='line' id='LC103'><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addSelf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">sub</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">subSelf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-=</span></div><div class='line' id='LC104'><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiplyScalar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">divideScalar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">/=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">/=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">/=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">lerpSelf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">*</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">*</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">z</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">*</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">+=</span></div><div class='line' id='LC105'><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">w</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span><span class="o">*</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">lengthOfXYZ</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">])};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector4</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">])};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC106'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix3</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="mi">9</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">identity</span><span class="p">()}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">identity</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">extractFromMatrix4</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">10</span><span class="p">]);</span></div><div class='line' id='LC107'><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiplyVector3</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC108'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="mi">16</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">columnX</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">columnY</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">columnZ</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">identity</span><span class="p">()}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">14</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span></div><div class='line' id='LC109'><span class="nx">n</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">15</span><span class="p">]</span><span class="o">=</span><span class="nx">q</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">identity</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">copy</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">8</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">12</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">9</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">13</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">10</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">14</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">7</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">11</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">15</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">lookAt</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">tempVector3A</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">tempVector3B</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">tempVector3C</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPosition</span><span class="p">();</span><span class="nx">h</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">12</span><span class="p">];</span><span class="nx">h</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">13</span><span class="p">];</span><span class="nx">h</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span></div><div class='line' id='LC110'><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">14</span><span class="p">];</span><span class="nx">g</span><span class="p">.</span><span class="nx">sub</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">).</span><span class="nx">normalize</span><span class="p">();</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">()</span><span class="o">===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">cross</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">).</span><span class="nx">normalize</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">()</span><span class="o">===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="mf">1.0</span><span class="nx">E</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">cross</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">).</span><span class="nx">normalize</span><span class="p">());</span><span class="nx">e</span><span class="p">.</span><span class="nx">cross</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">f</span><span class="p">).</span><span class="nx">normalize</span><span class="p">();</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiplyVector3</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">*</span></div><div class='line' id='LC111'><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">15</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">12</span><span class="p">])</span><span class="o">*</span><span class="nx">g</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">13</span><span class="p">])</span><span class="o">*</span><span class="nx">g</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">14</span><span class="p">])</span><span class="o">*</span><span class="nx">g</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiplyVector4</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span><span class="o">*</span><span class="nx">g</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">*</span></div><div class='line' id='LC112'><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span><span class="o">*</span><span class="nx">g</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">14</span><span class="p">]</span><span class="o">*</span><span class="nx">g</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">15</span><span class="p">]</span><span class="o">*</span><span class="nx">g</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">rotateAxis</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">f</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">f</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">f</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">10</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">normalize</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">crossVector</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC113'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector4</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">14</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">*</span><span class="nx">g</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">15</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiply</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">8</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">12</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">9</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">13</span><span class="p">],</span></div><div class='line' id='LC114'><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">10</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">14</span><span class="p">],</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">7</span><span class="p">],</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">11</span><span class="p">],</span><span class="nx">t</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">15</span><span class="p">],</span><span class="nx">u</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">v</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">x</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">8</span><span class="p">],</span><span class="nx">w</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">12</span><span class="p">],</span><span class="nx">y</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">z</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">A</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">9</span><span class="p">],</span><span class="nx">B</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">13</span><span class="p">],</span><span class="nx">C</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">D</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span><span class="nx">E</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">10</span><span class="p">],</span><span class="nx">F</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">14</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="nx">u</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">y</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">C</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="nx">v</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">z</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">D</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="nx">x</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">A</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">E</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="nx">w</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">B</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">F</span><span class="o">+</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="o">*</span><span class="nx">u</span><span class="o">+</span><span class="nx">j</span><span class="o">*</span><span class="nx">y</span><span class="o">+</span><span class="nx">k</span><span class="o">*</span><span class="nx">C</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="o">*</span><span class="nx">v</span><span class="o">+</span><span class="nx">j</span><span class="o">*</span><span class="nx">z</span><span class="o">+</span><span class="nx">k</span><span class="o">*</span><span class="nx">D</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="o">*</span><span class="nx">x</span><span class="o">+</span><span class="nx">j</span><span class="o">*</span><span class="nx">A</span><span class="o">+</span><span class="nx">k</span><span class="o">*</span><span class="nx">E</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="o">*</span><span class="nx">w</span><span class="o">+</span><span class="nx">j</span><span class="o">*</span><span class="nx">B</span><span class="o">+</span><span class="nx">k</span><span class="o">*</span><span class="nx">F</span><span class="o">+</span><span class="nx">l</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="o">*</span><span class="nx">u</span><span class="o">+</span><span class="nx">o</span><span class="o">*</span><span class="nx">y</span><span class="o">+</span><span class="nx">n</span><span class="o">*</span><span class="nx">C</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="o">*</span><span class="nx">v</span><span class="o">+</span><span class="nx">o</span><span class="o">*</span><span class="nx">z</span><span class="o">+</span><span class="nx">n</span><span class="o">*</span><span class="nx">D</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="o">*</span><span class="nx">x</span><span class="o">+</span><span class="nx">o</span><span class="o">*</span><span class="nx">A</span><span class="o">+</span><span class="nx">n</span><span class="o">*</span><span class="nx">E</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">14</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="o">*</span><span class="nx">w</span><span class="o">+</span><span class="nx">o</span><span class="o">*</span><span class="nx">B</span><span class="o">+</span><span class="nx">n</span><span class="o">*</span><span class="nx">F</span><span class="o">+</span><span class="nx">r</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">p</span><span class="o">*</span><span class="nx">u</span><span class="o">+</span><span class="nx">q</span><span class="o">*</span><span class="nx">y</span><span class="o">+</span><span class="nx">s</span><span class="o">*</span><span class="nx">C</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">=</span></div><div class='line' id='LC115'><span class="nx">p</span><span class="o">*</span><span class="nx">v</span><span class="o">+</span><span class="nx">q</span><span class="o">*</span><span class="nx">z</span><span class="o">+</span><span class="nx">s</span><span class="o">*</span><span class="nx">D</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">=</span><span class="nx">p</span><span class="o">*</span><span class="nx">x</span><span class="o">+</span><span class="nx">q</span><span class="o">*</span><span class="nx">A</span><span class="o">+</span><span class="nx">s</span><span class="o">*</span><span class="nx">E</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">15</span><span class="p">]</span><span class="o">=</span><span class="nx">p</span><span class="o">*</span><span class="nx">w</span><span class="o">+</span><span class="nx">q</span><span class="o">*</span><span class="nx">B</span><span class="o">+</span><span class="nx">s</span><span class="o">*</span><span class="nx">F</span><span class="o">+</span><span class="nx">t</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiplySelf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">multiply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiplyScalar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">14</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">15</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">determinant</span><span class="o">=</span></div><div class='line' id='LC116'><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">12</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">13</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">10</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">14</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">7</span><span class="p">],</span><span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">11</span><span class="p">],</span><span class="nx">q</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">15</span><span class="p">];</span><span class="k">return</span> <span class="nx">e</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">n</span><span class="o">-</span><span class="nx">f</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">n</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">h</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">n</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">n</span><span class="o">+</span><span class="nx">f</span><span class="o">*</span><span class="nx">h</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">n</span><span class="o">-</span><span class="nx">b</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">n</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">r</span><span class="o">+</span><span class="nx">f</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">r</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">g</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">r</span><span class="o">-</span><span class="nx">a</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">r</span><span class="o">-</span><span class="nx">f</span><span class="o">*</span><span class="nx">g</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">r</span><span class="o">+</span><span class="nx">a</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">r</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">h</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">p</span><span class="o">-</span><span class="nx">b</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">p</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">g</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">p</span><span class="o">+</span><span class="nx">a</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">p</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="nx">g</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">p</span><span class="o">-</span><span class="nx">a</span><span class="o">*</span><span class="nx">h</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">p</span><span class="o">-</span><span class="nx">f</span><span class="o">*</span><span class="nx">h</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">q</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">q</span><span class="o">+</span><span class="nx">f</span><span class="o">*</span><span class="nx">g</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">a</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">b</span><span class="o">*</span><span class="nx">g</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">q</span><span class="o">+</span><span class="nx">a</span><span class="o">*</span><span class="nx">h</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">q</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">transpose</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span></div><div class='line' id='LC117'><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">12</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">7</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">13</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">11</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">14</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setPosition</span><span class="o">=</span></div><div class='line' id='LC118'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">14</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addPosition</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span><span class="o">+=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span><span class="o">+=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">14</span><span class="p">]</span><span class="o">+=</span><span class="nx">f</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setRotation</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span></div><div class='line' id='LC119'><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">*</span><span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">*</span><span class="nx">e</span><span class="o">-</span><span class="nx">a</span><span class="o">*</span><span class="nx">f</span><span class="o">*</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">*</span><span class="nx">f</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="o">*</span><span class="nx">h</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">=-</span><span class="nx">g</span><span class="o">*</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="o">*</span><span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">*</span><span class="nx">f</span><span class="o">*</span><span class="nx">h</span><span class="o">+</span><span class="nx">a</span><span class="o">*</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="o">*</span><span class="nx">f</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">a</span><span class="o">*</span><span class="nx">h</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addRotation</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">setRotation</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">])};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getPosition</span><span class="o">=</span></div><div class='line' id='LC120'><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">12</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">13</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">14</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getColumnX</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">columnX</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">columnX</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getColumnY</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">columnY</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">columnY</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getColumnZ</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">columnZ</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">10</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">columnZ</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span></div><div class='line' id='LC121'><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">*=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">*=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">*=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">*=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">*=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="o">*=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">*=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">*=</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">invert</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">makeInverse</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC122'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">makeInverse</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">8</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">12</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">9</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">13</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">10</span><span class="p">],</span><span class="nx">p</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">14</span><span class="p">],</span><span class="nx">q</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">s</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">7</span><span class="p">],</span><span class="nx">t</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">11</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">15</span><span class="p">];</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="o">*</span><span class="nx">p</span><span class="o">*</span><span class="nx">s</span><span class="o">-</span><span class="nx">m</span><span class="o">*</span><span class="nx">r</span><span class="o">*</span><span class="nx">s</span><span class="o">+</span><span class="nx">m</span><span class="o">*</span><span class="nx">n</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="nx">k</span><span class="o">*</span><span class="nx">p</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="nx">l</span><span class="o">*</span><span class="nx">n</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="nx">k</span><span class="o">*</span><span class="nx">r</span><span class="o">*</span><span class="nx">c</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="o">*</span><span class="nx">r</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">l</span><span class="o">*</span><span class="nx">p</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">m</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="nx">j</span><span class="o">*</span><span class="nx">p</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="nx">l</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="nx">j</span><span class="o">*</span><span class="nx">r</span><span class="o">*</span><span class="nx">c</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="o">*</span><span class="nx">p</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">m</span><span class="o">*</span><span class="nx">n</span><span class="o">*</span><span class="nx">q</span><span class="o">+</span><span class="nx">m</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">s</span><span class="o">-</span><span class="nx">j</span><span class="o">*</span><span class="nx">p</span><span class="o">*</span><span class="nx">s</span><span class="o">-</span><span class="nx">k</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="nx">j</span><span class="o">*</span><span class="nx">n</span><span class="o">*</span><span class="nx">c</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="o">*</span><span class="nx">n</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">k</span><span class="o">*</span><span class="nx">r</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">l</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">s</span><span class="o">+</span><span class="nx">j</span><span class="o">*</span><span class="nx">r</span><span class="o">*</span><span class="nx">s</span><span class="o">+</span><span class="nx">k</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="nx">j</span><span class="o">*</span><span class="nx">n</span><span class="o">*</span><span class="nx">t</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="o">*</span><span class="nx">r</span><span class="o">*</span><span class="nx">s</span><span class="o">-</span><span class="nx">h</span><span class="o">*</span><span class="nx">p</span><span class="o">*</span><span class="nx">s</span><span class="o">-</span><span class="nx">i</span><span class="o">*</span><span class="nx">n</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">p</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">n</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="nx">g</span><span class="o">*</span><span class="nx">r</span><span class="o">*</span><span class="nx">c</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="o">*</span><span class="nx">p</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">i</span><span class="o">*</span><span class="nx">r</span><span class="o">*</span><span class="nx">q</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">p</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="nx">h</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">r</span><span class="o">*</span><span class="nx">c</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="o">*</span><span class="nx">n</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">g</span><span class="o">*</span><span class="nx">p</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">i</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">s</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">p</span><span class="o">*</span><span class="nx">s</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">n</span><span class="o">*</span><span class="nx">c</span><span class="p">;</span></div><div class='line' id='LC123'><span class="nx">f</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="o">*</span><span class="nx">r</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">h</span><span class="o">*</span><span class="nx">n</span><span class="o">*</span><span class="nx">q</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">s</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">r</span><span class="o">*</span><span class="nx">s</span><span class="o">-</span><span class="nx">g</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">n</span><span class="o">*</span><span class="nx">t</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">s</span><span class="o">-</span><span class="nx">i</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">s</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="nx">g</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="nx">h</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">c</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">h</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">i</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">t</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">c</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">i</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">q</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">s</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">s</span><span class="o">-</span><span class="nx">g</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">c</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">g</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">q</span><span class="o">-</span><span class="nx">h</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">s</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">s</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">t</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">t</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">n</span><span class="o">-</span><span class="nx">h</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">n</span><span class="o">-</span><span class="nx">i</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">r</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">r</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">p</span><span class="o">-</span><span class="nx">g</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">p</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">o</span><span class="o">-</span><span class="nx">i</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">o</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">r</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">r</span><span class="o">-</span><span class="nx">h</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">p</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">p</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="mi">14</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">o</span><span class="o">-</span><span class="nx">g</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">o</span><span class="o">-</span><span class="nx">i</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">n</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="nx">n</span><span class="o">+</span><span class="nx">g</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">p</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">p</span><span class="p">;</span><span class="nx">f</span><span class="p">[</span><span class="mi">15</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">o</span><span class="o">-</span><span class="nx">h</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">o</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">n</span><span class="o">-</span><span class="nx">e</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">n</span><span class="o">-</span><span class="nx">g</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">r</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="nx">r</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">multiplyScalar</span><span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="nx">b</span><span class="p">.</span><span class="nx">determinant</span><span class="p">());</span><span class="k">return</span> <span class="nx">a</span><span class="p">};</span></div><div class='line' id='LC124'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">makeFrustum</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">||</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">b</span><span class="p">);</span><span class="nx">i</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">b</span><span class="p">);</span><span class="nx">i</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">c</span><span class="p">);</span><span class="nx">i</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">f</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">c</span><span class="p">);</span><span class="nx">i</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="o">=-</span><span class="p">(</span><span class="nx">g</span><span class="o">+</span><span class="nx">e</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="nx">e</span><span class="p">);</span><span class="nx">i</span><span class="p">[</span><span class="mi">14</span><span class="p">]</span><span class="o">=-</span><span class="mi">2</span><span class="o">*</span><span class="nx">g</span><span class="o">*</span><span class="nx">e</span><span class="o">/</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="nx">e</span><span class="p">);</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">15</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">h</span><span class="p">};</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">makeProjection</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">tan</span><span class="p">(</span><span class="nx">b</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">360</span><span class="p">);</span><span class="nx">g</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">makeFrustum</span><span class="p">(</span><span class="nx">g</span><span class="o">*</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">*</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">)};</span></div><div class='line' id='LC125'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">makeOrtho</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">||</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">b</span><span class="p">);</span><span class="nx">k</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">c</span><span class="o">-</span><span class="nx">f</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="nx">e</span><span class="p">);</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="o">/</span><span class="nx">j</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">8</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">12</span><span class="p">]</span><span class="o">=-</span><span class="p">((</span><span class="nx">a</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="nx">j</span><span class="p">);</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="o">/</span><span class="nx">k</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">13</span><span class="p">]</span><span class="o">=-</span><span class="p">((</span><span class="nx">c</span><span class="o">+</span><span class="nx">f</span><span class="p">)</span><span class="o">/</span><span class="nx">k</span><span class="p">);</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="o">=-</span><span class="mi">2</span><span class="o">/</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">14</span><span class="p">]</span><span class="o">=-</span><span class="p">((</span><span class="nx">g</span><span class="o">+</span><span class="nx">e</span><span class="p">)</span><span class="o">/</span><span class="nx">l</span><span class="p">);</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="mi">15</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="nx">h</span><span class="p">};</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">tempVector3A</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">;</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">tempVector3B</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">;</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">tempVector3C</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">;</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">tempVector3D</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">;</span></div><div class='line' id='LC126'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Color</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span><span class="nx">b</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">setHex</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">setRGB</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">)}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setRGB</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="o">/</span><span class="mi">255</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="o">/</span><span class="mi">255</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">f</span><span class="o">/</span><span class="mi">255</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setHex</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="p">((</span><span class="nx">a</span><span class="o">&amp;</span><span class="mi">16711680</span><span class="p">)</span><span class="o">&gt;&gt;</span><span class="mi">16</span><span class="p">)</span><span class="o">/</span><span class="mi">255</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="p">((</span><span class="nx">a</span><span class="o">&amp;</span><span class="mi">65280</span><span class="p">)</span><span class="o">&gt;&gt;</span><span class="mi">8</span><span class="p">)</span><span class="o">/</span><span class="mi">255</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;</span><span class="mi">255</span><span class="p">)</span><span class="o">/</span><span class="mi">255</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">multiplyScalar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*=</span></div><div class='line' id='LC127'><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">mix</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">copy</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setHSV</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">switch</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">a</span><span class="o">*</span><span class="mi">6</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="o">*</span><span class="mi">6</span><span class="o">-</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="o">*</span><span class="nx">j</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">j</span><span class="p">)),</span><span class="nx">i</span><span class="p">){</span><span class="k">case</span> <span class="mi">1</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="mi">2</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span></div><div class='line' id='LC128'><span class="nx">b</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="mi">3</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="mi">4</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="mi">5</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="mi">6</span><span class="o">:</span><span class="k">case</span> <span class="mi">0</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC129'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Geometry</span><span class="o">=</span><span class="p">{</span><span class="nx">randomVector3Array</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">*</span><span class="mi">2</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">*</span><span class="nx">e</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">*</span><span class="nx">e</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">*</span><span class="nx">e</span><span class="o">-</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span> <span class="nx">f</span><span class="p">},</span><span class="nx">randomArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">/</span><span class="nx">f</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">*</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">)}</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">triangles</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">elements</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">elements</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint16Array</span><span class="p">(</span><span class="nx">b</span><span class="o">*</span><span class="mi">3</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">++</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">++</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">++</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="p">},</span><span class="nx">faceNormals</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Array</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span></div><div class='line' id='LC130'><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;)</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">*</span><span class="mi">3</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">*</span><span class="mi">3</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">*</span><span class="mi">3</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="o">+</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="o">+</span><span class="mi">2</span><span class="p">]),</span><span class="nx">k</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">2</span><span class="p">]),</span><span class="nx">l</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">2</span><span class="p">]),</span><span class="nx">k</span><span class="p">.</span><span class="nx">subSelf</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">subSelf</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">cross</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">).</span><span class="nx">normalize</span><span class="p">(),</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="o">+</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">value</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">flatShade</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">triangles</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">===</span></div><div class='line' id='LC131'><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Geometry.flatShade: missing .data and/or .triangles in shader config object. Quitting.&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Geometry.flatShade: missing attribute data sizes. Quitting.&quot;</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">triangles</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="mi">3</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">j</span><span class="p">]){</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span><span class="nx">flatShadedAttribute</span><span class="o">=</span><span class="p">[];</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="mi">3</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">){</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">o</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="nx">flatShadedAttribute</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">*</span><span class="nx">i</span><span class="o">+</span><span class="nx">m</span><span class="p">])}</span><span class="nx">k</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">flatShadedAttribute</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="nx">flatShadedAttribute</span><span class="p">[</span><span class="nx">k</span><span class="p">]}</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span></div><div class='line' id='LC132'><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">k</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="o">++</span><span class="p">,</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="o">++</span><span class="p">,</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">m</span><span class="o">++</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">triangles</span><span class="o">=</span><span class="nx">g</span><span class="p">}}};</span></div><div class='line' id='LC133'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Geometry</span><span class="p">.</span><span class="nx">Cube</span><span class="o">=</span><span class="p">{</span><span class="nx">vertices</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="mi">72</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="o">*</span><span class="mf">0.5</span><span class="o">:</span><span class="mi">5</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span></div><div class='line' id='LC134'><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">indices</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint16Array</span><span class="p">(</span><span class="mi">36</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">4</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">5</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">6</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">4</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">6</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">7</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">8</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">9</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span></div><div class='line' id='LC135'><span class="mi">10</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">8</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">10</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">11</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">12</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">13</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">14</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">12</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">14</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">15</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">16</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">17</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">18</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">16</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">18</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">19</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">20</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">21</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">22</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">20</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">22</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">23</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">primitives</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">GL</span><span class="p">.</span><span class="nx">TRIANGLES</span><span class="p">},</span><span class="nx">uvs</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="mi">48</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span></div><div class='line' id='LC136'><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">normals</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Geometry</span><span class="p">.</span><span class="nx">faceNormals</span><span class="p">(</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Geometry</span><span class="p">.</span><span class="nx">Cube</span><span class="p">.</span><span class="nx">vertices</span><span class="p">(),</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Geometry</span><span class="p">.</span><span class="nx">Cube</span><span class="p">.</span><span class="nx">indices</span><span class="p">())}};</span></div><div class='line' id='LC137'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Geometry</span><span class="p">.</span><span class="nx">Cylinder</span><span class="o">=</span><span class="p">{</span><span class="nx">vertices</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">b</span><span class="o">|=</span><span class="mi">7</span><span class="p">;</span><span class="nx">a</span><span class="o">|=</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="o">|=</span><span class="mi">1</span><span class="p">;</span><span class="nx">f</span><span class="o">|=</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="o">*</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">g</span><span class="o">*</span><span class="nx">f</span><span class="o">/</span><span class="nx">b</span><span class="p">)</span><span class="o">*</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">g</span><span class="o">*</span><span class="nx">f</span><span class="o">/</span><span class="nx">b</span><span class="p">)</span><span class="o">*</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">g</span><span class="o">*</span><span class="nx">f</span><span class="o">/</span><span class="nx">b</span><span class="p">)</span><span class="o">*</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="o">-</span><span class="nx">h</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">g</span><span class="o">*</span><span class="nx">f</span><span class="o">/</span><span class="nx">b</span><span class="p">)</span><span class="o">*</span><span class="nx">c</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="o">-</span><span class="nx">h</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">indices</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">|=</span><span class="mi">7</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">g</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="mf">0.5</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC138'><span class="mi">2</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">g</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="mi">0</span><span class="p">)</span><span class="o">%</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">g</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">g</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span><span class="o">%</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="mf">0.5</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="mi">2</span><span class="o">*</span><span class="nx">b</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">g</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span><span class="o">%</span><span class="nx">b</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">g</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="nx">b</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">g</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="mi">0</span><span class="p">)</span><span class="o">%</span><span class="nx">b</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="nx">h</span><span class="p">},</span><span class="nx">uvs</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">primitives</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">GL</span><span class="p">.</span><span class="nx">TRIANGLES</span><span class="p">},</span><span class="nx">normals</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Geometry</span><span class="p">.</span><span class="nx">faceNormals</span><span class="p">(</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Geometry</span><span class="p">.</span><span class="nx">Cylinder</span><span class="p">.</span><span class="nx">vertices</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Geometry</span><span class="p">.</span><span class="nx">Cylinder</span><span class="p">.</span><span class="nx">indices</span><span class="p">(</span><span class="nx">b</span><span class="p">))}};</span></div><div class='line' id='LC139'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Geometry</span><span class="p">.</span><span class="nx">Plane</span><span class="o">=</span><span class="p">{</span><span class="nx">vertices</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="mi">12</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="o">*</span><span class="mf">0.5</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=+</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=-</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">indices</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">Uint16Array</span><span class="p">(</span><span class="mi">6</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">uvs</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">Float32Array</span><span class="p">(</span><span class="mi">8</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span></div><div class='line' id='LC140'><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">primitives</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">GL</span><span class="p">.</span><span class="nx">TRIANGLES</span><span class="p">}};</span></div><div class='line' id='LC141'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Node</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">localMatrix</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">globalMatrix</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">viewMatrix</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">updateRotationMatrix</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">rotationMatrix</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix3</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">useXYZStyleTransform</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">z</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">z</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">z</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">shader</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">draw</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">draw</span><span class="p">};</span></div><div class='line' id='LC142'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Node</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">update</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">useXYZStyleTransform</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">localMatrix</span><span class="p">.</span><span class="nx">setPosition</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">z</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">localMatrix</span><span class="p">.</span><span class="nx">setRotation</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">.</span><span class="nx">z</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">localMatrix</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">z</span><span class="p">));</span><span class="nx">b</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">globalMatrix</span><span class="p">.</span><span class="nx">multiply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">localMatrix</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">globalMatrix</span><span class="p">.</span><span class="nx">copy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">localMatrix</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">updateRotationMatrix</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">rotationMatrix</span><span class="p">.</span><span class="nx">extractFromMatrix4</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">globalMatrix</span><span class="p">);</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">viewMatrix</span><span class="p">.</span><span class="nx">multiply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">globalMatrix</span><span class="p">);</span></div><div class='line' id='LC143'><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">update</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">globalMatrix</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Node</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addChild</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">===-</span><span class="mi">1</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Node</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">removeChild</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">!==-</span><span class="mi">1</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">};</span></div><div class='line' id='LC144'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Camera</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Node</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">fov</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">fov</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">fov</span><span class="o">:</span><span class="mi">40</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">aspect</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">aspect</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">aspect</span><span class="o">:</span><span class="nb">window</span><span class="p">.</span><span class="nx">innerWidth</span><span class="o">/</span><span class="nb">window</span><span class="p">.</span><span class="nx">innerHeight</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">near</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">near</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">near</span><span class="o">:</span><span class="mf">0.1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">far</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">far</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">far</span><span class="o">:</span><span class="mi">1</span><span class="nx">E4</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">useTarget</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">useTarget</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">useTarget</span><span class="o">:!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">projection</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">ortho</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">makeOrtho</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">ortho</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">ortho</span><span class="p">.</span><span class="nx">right</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">ortho</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">ortho</span><span class="p">.</span><span class="nx">bottom</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">near</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">far</span><span class="p">)</span><span class="o">:</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">makeProjection</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fov</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">aspect</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">near</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">far</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">inverse</span><span class="o">=</span></div><div class='line' id='LC145'><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">100</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">up</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">()};</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Camera</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Node</span><span class="p">;</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Camera</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">constructor</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Camera</span><span class="p">;</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Camera</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">supr</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Node</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span></div><div class='line' id='LC146'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Camera</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">update</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">useXYZStyleTransform</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">localMatrix</span><span class="p">.</span><span class="nx">setPosition</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">z</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">useTarget</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">localMatrix</span><span class="p">.</span><span class="nx">lookAt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">up</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">localMatrix</span><span class="p">.</span><span class="nx">setRotation</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">.</span><span class="nx">z</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">localMatrix</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">z</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">useTarget</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">localMatrix</span><span class="p">.</span><span class="nx">lookAt</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">up</span><span class="p">);</span><span class="nx">b</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">globalMatrix</span><span class="p">.</span><span class="nx">multiply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">localMatrix</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">globalMatrix</span><span class="p">.</span><span class="nx">copy</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">localMatrix</span><span class="p">);</span></div><div class='line' id='LC147'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Matrix4</span><span class="p">.</span><span class="nx">makeInverse</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">globalMatrix</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">inverse</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">children</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">update</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">globalMatrix</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">defaultCamera</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Camera</span><span class="p">;</span></div><div class='line' id='LC148'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Load</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">parameters</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadComplete</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadContext</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadItem</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">numItemsLeftToLoad</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">numItemsToLoad</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="o">!==</span><span class="s2">&quot;onLoadComplete&quot;</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="s2">&quot;onLoadItem&quot;</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="s2">&quot;dontParseJS&quot;</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!=</span><span class="s2">&quot;onLoadContext&quot;</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">numItemsToLoad</span><span class="o">++:</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">numItemsLeftToLoad</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">numItemsToLoad</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.png&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.gif&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.jpg&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;jpeg&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">Image</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">scope</span><span class="o">=</span></div><div class='line' id='LC149'><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">onload</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadImage</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">onerror</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadError</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">onabort</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadError</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">src</span><span class="o">=</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.glsl&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">scope</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">parametersProperty</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">open</span><span class="p">(</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadGLSL</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">onerror</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadError</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">onabort</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadError</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">send</span><span class="p">())</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.js&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.json&quot;</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">scope</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">parametersProperty</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">open</span><span class="p">(</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadJSON</span><span class="p">,</span></div><div class='line' id='LC150'><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">onerror</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadError</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">onabort</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadError</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">send</span><span class="p">())</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;video&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">scope</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;loadeddata&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadVideo</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">src</span><span class="o">=</span><span class="nx">f</span><span class="p">)}}</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">handleLoadedItem</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">numItemsLeftToLoad</span><span class="o">--</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadItem</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadItem</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadContext</span><span class="p">,</span><span class="mi">1</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">numItemsLeftToLoad</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">numItemsToLoad</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">numItemsLeftToLoad</span><span class="o">&lt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadComplete</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onLoadContext</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">parameters</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onLoadJSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">===</span></div><div class='line' id='LC151'><span class="mi">4</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">parameters</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">parametersProperty</span><span class="p">]</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">responseText</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">handleLoadedItem</span><span class="p">())};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onLoadImage</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">handleLoadedItem</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onLoadVideo</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;loadeddata&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">onLoadVideo</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">handleLoadedItem</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onLoadGLSL</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span><span class="o">===</span><span class="mi">4</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">responseText</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;\n&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;//#&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;Fragment&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span></div><div class='line' id='LC152'><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;//&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;//&quot;</span><span class="p">)));</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;;&quot;</span><span class="p">)</span><span class="o">===-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">+=</span><span class="s2">&quot;\n&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">+=</span><span class="nx">g</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">parameters</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">parametersProperty</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">fragmentShader</span><span class="o">:</span><span class="s2">&quot;#ifdef GL_ES\nprecision highp float;\n#endif\n&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="nx">vertexShader</span><span class="o">:</span><span class="nx">a</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">.</span><span class="nx">handleLoadedItem</span><span class="p">()}};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onLoadError</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.Load.onLoadError: Error &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">status</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">parseThreeJS</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{},</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">scale</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="mi">1</span><span class="o">/</span><span class="nx">a</span><span class="p">.</span><span class="nx">scale</span><span class="o">:</span><span class="mi">1</span><span class="p">;(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">version</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">version</span><span class="o">!=</span><span class="mi">2</span><span class="p">)</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;Deprecated file format.&quot;</span><span class="p">);</span></div><div class='line' id='LC153'><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">faces</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">vertices</span><span class="p">;</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">normals</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">colors</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">uvs</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">uvs</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="o">++</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">w</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">faceUvs</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="p">.</span><span class="nx">faceVertexUvs</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">[];</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;)</span><span class="nx">m</span><span class="o">=</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">Vertex</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">z</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">vertices</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">;){</span><span class="nx">e</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">];</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;</span><span class="mi">2</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;</span><span class="mi">4</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;</span><span class="mi">8</span><span class="p">;</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;</span><span class="mi">16</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;</span><span class="mi">32</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;</span><span class="mi">64</span><span class="p">;</span><span class="nx">e</span><span class="o">&amp;=</span><span class="mi">128</span><span class="p">;</span><span class="nx">l</span><span class="o">?</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">Face4</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">],</span><span class="nx">p</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">],</span><span class="nx">p</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">],</span><span class="nx">p</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">Face3</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">],</span></div><div class='line' id='LC154'><span class="nx">p</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">],</span><span class="nx">p</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="mi">3</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="nx">i</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">],</span><span class="nx">p</span><span class="p">.</span><span class="nx">materials</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">materials</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">faces</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">w</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">uvs</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">],</span><span class="nx">t</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="nx">n</span><span class="o">*</span><span class="mi">2</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="nx">n</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">faceUvs</span><span class="p">[</span><span class="nx">f</span><span class="p">][</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">UV</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">w</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">uvs</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="nx">s</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">],</span><span class="nx">t</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="nx">n</span><span class="o">*</span><span class="mi">2</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="nx">n</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">s</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">UV</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">faceVertexUvs</span><span class="p">[</span><span class="nx">f</span><span class="p">][</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span><span class="nx">o</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">]</span><span class="o">*</span><span class="mi">3</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="nx">o</span><span class="o">++</span><span class="p">],</span><span class="nx">h</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="nx">o</span><span class="o">++</span><span class="p">],</span><span class="nx">h</span><span class="p">.</span><span class="nx">z</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">p</span><span class="p">.</span><span class="nx">normal</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">o</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">]</span><span class="o">*</span><span class="mi">3</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="nx">o</span><span class="o">++</span><span class="p">],</span><span class="nx">h</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="nx">o</span><span class="o">++</span><span class="p">],</span><span class="nx">h</span><span class="p">.</span><span class="nx">z</span><span class="o">=</span><span class="nx">v</span><span class="p">[</span><span class="nx">o</span><span class="p">],</span><span class="nx">p</span><span class="p">.</span><span class="nx">vertexNormals</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="nx">m</span><span class="o">=</span></div><div class='line' id='LC155'><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">Color</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">m</span><span class="p">]),</span><span class="nx">p</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="nx">m</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">m</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">Color</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">m</span><span class="p">]),</span><span class="nx">p</span><span class="p">.</span><span class="nx">vertexColors</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">faces</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">p</span><span class="p">)}}})(</span><span class="nx">f</span><span class="p">);(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">skinWeights</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">skinWeights</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">skinWeights</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">skinWeights</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">skinWeights</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">Vector4</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">))}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">skinIndices</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">skinIndices</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">skinIndices</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">skinIndices</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">skinIndices</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">Vector4</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">))}</span><span class="nx">b</span><span class="p">.</span><span class="nx">bones</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">bones</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">animation</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">animation</span><span class="p">})();(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">morphTargets</span><span class="o">!==</span></div><div class='line' id='LC156'><span class="k">void</span> <span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">morphTargets</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">morphTargets</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">{};</span><span class="nx">b</span><span class="p">.</span><span class="nx">morphTargets</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">name</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">morphTargets</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">name</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">morphTargets</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">vertices</span><span class="o">=</span><span class="p">[];</span><span class="nx">o</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">morphTargets</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">vertices</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">morphTargets</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">vertices</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">i</span><span class="o">+=</span><span class="mi">3</span><span class="p">)</span><span class="nx">k</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">Vertex</span><span class="p">(</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">Vector3</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">)))}}</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">morphColors</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">morphColors</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">morphColors</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="p">{};</span><span class="nx">b</span><span class="p">.</span><span class="nx">morphColors</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">name</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">morphColors</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">name</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">morphColors</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">colors</span><span class="o">=</span><span class="p">[];</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">morphColors</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">colors</span><span class="p">;</span></div><div class='line' id='LC157'><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">morphColors</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">colors</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">e</span><span class="o">+=</span><span class="mi">3</span><span class="p">)</span><span class="nx">l</span><span class="o">=</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">Color</span><span class="p">(</span><span class="mi">16755200</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">setRGB</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">k</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">k</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">2</span><span class="p">]),</span><span class="nx">j</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">l</span><span class="p">)}}})(</span><span class="nx">f</span><span class="p">);(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">edges</span><span class="o">!==</span><span class="k">void</span> <span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">edges</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">edges</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">edges</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">edges</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nx">Edge</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">vertices</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">vertices</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">))}})()};</span><span class="k">return</span> <span class="nx">b</span><span class="p">}();</span></div><div class='line' id='LC158'><span class="nx">GLOW</span><span class="p">.</span><span class="nx">ShaderUtils</span><span class="o">=</span><span class="p">{</span><span class="nx">createMultiple</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">triangles</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.ShaderUtils.createMultiple: missing .data and/or .triangles in shader config object. Quitting.&quot;</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">triangles</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">do</span><span class="p">{</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">elements</span><span class="o">:</span><span class="p">[]});</span><span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">elements</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">k</span><span class="p">])</span><span class="nx">g</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="p">[];</span><span class="k">else</span><span class="p">{</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;GLOW.ShaderUtils.createMultiple: attribute &quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; doesn&#39;t exist in originalShaderConfig.data. Quitting.&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">n</span><span class="o">+=</span><span class="mi">3</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">&gt;</span><span class="mi">65533</span><span class="p">){</span><span class="nx">n</span><span class="o">-=</span><span class="mi">3</span><span class="p">;</span></div><div class='line' id='LC159'><span class="k">break</span><span class="p">}</span><span class="nx">c</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="o">++</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="o">++</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="o">++</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span> <span class="k">in</span> <span class="nx">a</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">k</span><span class="p">];</span><span class="nx">size</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">k</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">o</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="nx">o</span><span class="o">++</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">size</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="nx">k</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">f</span><span class="p">[</span><span class="nx">n</span><span class="o">+</span><span class="nx">o</span><span class="p">]</span><span class="o">*</span><span class="nx">size</span><span class="o">+</span><span class="nx">l</span><span class="p">])}}}}</span><span class="k">while</span><span class="p">(</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">r</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="nx">k</span><span class="p">];</span><span class="nx">b</span><span class="p">.</span><span class="nx">triangles</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">elements</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">GLOW</span><span class="p">.</span><span class="nx">Shader</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">][</span><span class="nx">k</span><span class="p">];</span><span class="nx">e</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Compiler</span><span class="p">.</span><span class="nx">createAttributes</span><span class="p">(</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Compiler</span><span class="p">.</span><span class="nx">extractAttributes</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">compiledData</span><span class="p">.</span><span class="nx">program</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">usage</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">interleave</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">GLOW</span><span class="p">.</span><span class="nx">Compiler</span><span class="p">.</span><span class="nx">interleaveAttributes</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">interleave</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">][</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">l</span><span class="p">];</span><span class="nx">f</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">clone</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">])}</span><span class="k">return</span> <span class="nx">f</span><span class="p">}}};</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>
      </div>
    </div>

  </div>

<div class="frame frame-loading large-loading-area" style="display:none;" data-tree-list-url="/empaempa/GLOW/tree-list/abe60599e4df08f0151e741e31f4b181cb1db3b5" data-blob-url-prefix="/empaempa/GLOW/blob/abe60599e4df08f0151e741e31f4b181cb1db3b5">
  <img src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif?1347543527" height="64" width="64">
</div>

        </div>
      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer" >
        
  <div class="upper_footer">
     <div class="container clearfix">

       <!--[if IE]><h4 id="blacktocat_ie">GitHub Links</h4><![endif]-->
       <![if !IE]><h4 id="blacktocat">GitHub Links</h4><![endif]>

       <ul class="footer_nav">
         <h4>GitHub</h4>
         <li><a href="https://github.com/about">About</a></li>
         <li><a href="https://github.com/blog">Blog</a></li>
         <li><a href="https://github.com/features">Features</a></li>
         <li><a href="https://github.com/contact">Contact &amp; Support</a></li>
         <li><a href="http://training.github.com/">Training</a></li>
         <li><a href="http://enterprise.github.com/">GitHub Enterprise</a></li>
         <li><a href="http://status.github.com/">Site Status</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Clients</h4>
         <li><a href="http://mac.github.com/">GitHub for Mac</a></li>
         <li><a href="http://windows.github.com/">GitHub for Windows</a></li>
         <li><a href="http://eclipse.github.com/">GitHub for Eclipse</a></li>
         <li><a href="http://mobile.github.com/">GitHub Mobile Apps</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Tools</h4>
         <li><a href="http://get.gaug.es/">Gauges: Web analytics</a></li>
         <li><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></li>
         <li><a href="https://gist.github.com">Gist: Code snippets</a></li>

         <h4 class="second">Extras</h4>
         <li><a href="http://jobs.github.com/">Job Board</a></li>
         <li><a href="http://shop.github.com/">GitHub Shop</a></li>
         <li><a href="http://octodex.github.com/">The Octodex</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Documentation</h4>
         <li><a href="http://help.github.com/">GitHub Help</a></li>
         <li><a href="http://developer.github.com/">Developer API</a></li>
         <li><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></li>
         <li><a href="http://pages.github.com/">GitHub Pages</a></li>
       </ul>

     </div><!-- /.site -->
  </div><!-- /.upper_footer -->

<div class="lower_footer">
  <div class="container clearfix">
    <!--[if IE]><div id="legal_ie"><![endif]-->
    <![if !IE]><div id="legal"><![endif]>
      <ul>
          <li><a href="https://github.com/site/terms">Terms of Service</a></li>
          <li><a href="https://github.com/site/privacy">Privacy</a></li>
          <li><a href="https://github.com/security">Security</a></li>
      </ul>

      <p>&copy; 2012 <span title="0.09302s from fe16.rs.github.com">GitHub</span> Inc. All rights reserved.</p>
    </div><!-- /#legal or /#legal_ie-->

  </div><!-- /.site -->
</div><!-- /.lower_footer -->


      </div><!-- /#footer -->

    

<div id="keyboard_shortcuts_pane" class="instapaper_ignore readability-extra" style="display:none">
  <h2>Keyboard Shortcuts <small><a href="#" class="js-see-all-keyboard-shortcuts">(see all)</a></small></h2>

  <div class="columns threecols">
    <div class="column first">
      <h3>Site wide shortcuts</h3>
      <dl class="keyboard-mappings">
        <dt>s</dt>
        <dd>Focus command bar</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>?</dt>
        <dd>Bring up this help dialog</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column middle" style='display:none'>
      <h3>Commit list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>c <em>or</em> o <em>or</em> enter</dt>
        <dd>Open commit</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>y</dt>
        <dd>Expand URL to its canonical form</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column last js-hidden-pane" style='display:none'>
      <h3>Pull request list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
        <dd>Submit comment</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> shift p</dt>
        <dd>Preview comment</dd>
      </dl>
    </div><!-- /.columns.last -->

  </div><!-- /.columns.equacols -->

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Issues</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>x</dt>
          <dd>Toggle selection</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> shift p</dt>
          <dd>Preview comment</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>c</dt>
          <dd>Create issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Create label</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>i</dt>
          <dd>Back to inbox</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>u</dt>
          <dd>Back to issues</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>/</dt>
          <dd>Focus issues search</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Issues Dashboard</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Network Graph</h3>
    <div class="columns equacols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt><span class="badmono">←</span> <em>or</em> h</dt>
          <dd>Scroll left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">→</span> <em>or</em> l</dt>
          <dd>Scroll right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↑</span> <em>or</em> k</dt>
          <dd>Scroll up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">↓</span> <em>or</em> j</dt>
          <dd>Scroll down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Toggle visibility of head labels</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">←</span> <em>or</em> shift h</dt>
          <dd>Scroll all the way left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">→</span> <em>or</em> shift l</dt>
          <dd>Scroll all the way right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↑</span> <em>or</em> shift k</dt>
          <dd>Scroll all the way up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">↓</span> <em>or</em> shift j</dt>
          <dd>Scroll all the way down</dd>
        </dl>
      </div><!-- /.column.last -->
    </div>
  </div>

  <div class="js-hidden-pane" >
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first js-hidden-pane" >
        <h3>Source Code Browsing</h3>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Activates the file finder</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Jump to line</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>w</dt>
          <dd>Switch branch/tag</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Expand URL to its canonical form</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first">
        <h3>Browsing Commits</h3>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">⌘</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>escape</dt>
          <dd>Close form</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>p</dt>
          <dd>Parent commit</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o</dt>
          <dd>Other parent commit</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>
    <h3>Notifications</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open notification</dd>
        </dl>
      </div><!-- /.column.first -->

      <div class="column second">
        <dl class="keyboard-mappings">
          <dt>e <em>or</em> shift i <em>or</em> y</dt>
          <dd>Mark as read</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift m</dt>
          <dd>Mute thread</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

</div>

    <div id="markdown-help" class="instapaper_ignore readability-extra">
  <h2>Markdown Cheat Sheet</h2>

  <div class="cheatsheet-content">

  <div class="mod">
    <div class="col">
      <h3>Format Text</h3>
      <p>Headers</p>
      <pre>
# This is an &lt;h1&gt; tag
## This is an &lt;h2&gt; tag
###### This is an &lt;h6&gt; tag</pre>
     <p>Text styles</p>
     <pre>
*This text will be italic*
_This will also be italic_
**This text will be bold**
__This will also be bold__

*You **can** combine them*
</pre>
    </div>
    <div class="col">
      <h3>Lists</h3>
      <p>Unordered</p>
      <pre>
* Item 1
* Item 2
  * Item 2a
  * Item 2b</pre>
     <p>Ordered</p>
     <pre>
1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b</pre>
    </div>
    <div class="col">
      <h3>Miscellaneous</h3>
      <p>Images</p>
      <pre>
![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
</pre>
     <p>Links</p>
     <pre>
http://github.com - automatic!
[GitHub](http://github.com)</pre>
<p>Blockquotes</p>
     <pre>
As Kanye West said:

> We're living the future so
> the present is our past.
</pre>
    </div>
  </div>
  <div class="rule"></div>

  <h3>Code Examples in Markdown</h3>
  <div class="col">
      <p>Syntax highlighting with <a href="http://github.github.com/github-flavored-markdown/" title="GitHub Flavored Markdown" target="_blank">GFM</a></p>
      <pre>
```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```</pre>
    </div>
    <div class="col">
      <p>Or, indent your code 4 spaces</p>
      <pre>
Here is a Python code example
without syntax highlighting:

    def foo:
      if not bar:
        return true</pre>
    </div>
    <div class="col">
      <p>Inline code for comments</p>
      <pre>
I think you should use an
`&lt;addr&gt;` element here instead.</pre>
    </div>
  </div>

  </div>
</div>


    <div id="ajax-error-message" class="flash flash-error">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="mini-icon mini-icon-remove-close ajax-error-dismiss"></a>
    </div>

    <div id="logo-popup">
      <h2>Looking for the GitHub logo?</h2>
      <ul>
        <li>
          <h4>GitHub Logo</h4>
          <a href="http://github-media-downloads.s3.amazonaws.com/GitHub_Logos.zip"><img alt="Github_logo" src="https://a248.e.akamai.net/assets.github.com/images/modules/about_page/github_logo.png?1340659511" /></a>
          <a href="http://github-media-downloads.s3.amazonaws.com/GitHub_Logos.zip" class="minibutton download">Download</a>
        </li>
        <li>
          <h4>The Octocat</h4>
          <a href="http://github-media-downloads.s3.amazonaws.com/Octocats.zip"><img alt="Octocat" src="https://a248.e.akamai.net/assets.github.com/images/modules/about_page/octocat.png?1340659511" /></a>
          <a href="http://github-media-downloads.s3.amazonaws.com/Octocats.zip" class="minibutton download">Download</a>
        </li>
      </ul>
    </div>

    
    
    <span id='server_response_time' data-time='0.09477' data-host='fe16'></span>
    
  </body>
</html>

